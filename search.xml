<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>配置QT的c++和py交叉编译环境</title>
      <link href="/2025/03/23/QT/%E9%85%8D%E7%BD%AEQT%E7%9A%84c++%E5%92%8Cpy%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/%E9%85%8D%E7%BD%AEQT%E7%9A%84c++%E5%92%8Cpy%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/"/>
      <url>/2025/03/23/QT/%E9%85%8D%E7%BD%AEQT%E7%9A%84c++%E5%92%8Cpy%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/%E9%85%8D%E7%BD%AEQT%E7%9A%84c++%E5%92%8Cpy%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h1 id="配置QT的工具链"><a href="#配置QT的工具链" class="headerlink" title="配置QT的工具链"></a>配置QT的工具链</h1><p><strong>找到你安装python的目录，在这里我的是C:\Users\glass\AppData\Local\Programs\Python\Python310文件夹复制include文件夹和libs文件夹</strong><br><img src="/picture/QT/%E9%85%8D%E7%BD%AEQT%E7%9A%84c++%E5%92%8Cpy%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/1.png" class="lazyload placeholder" data-srcset="/picture/QT/%E9%85%8D%E7%BD%AEQT%E7%9A%84c++%E5%92%8Cpy%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="配置QT的python工具链"><br><strong>创建一个新的隔离环境，并将include文件夹和libs文件夹，复制进入新的隔离环境</strong><br><img src="/picture/QT/%E9%85%8D%E7%BD%AEQT%E7%9A%84c++%E5%92%8Cpy%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/2.png" class="lazyload placeholder" data-srcset="/picture/QT/%E9%85%8D%E7%BD%AEQT%E7%9A%84c++%E5%92%8Cpy%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="配置QT的python工具链"><br><strong>进入QT打开最上方工具，点击选项</strong><br><strong>在步骤3中点击添加目录，添加工具，双击可以修改名字，这里我都修改成了python3.10</strong><br><img src="/picture/QT/%E9%85%8D%E7%BD%AEQT%E7%9A%84c++%E5%92%8Cpy%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/3.png" class="lazyload placeholder" data-srcset="/picture/QT/%E9%85%8D%E7%BD%AEQT%E7%9A%84c++%E5%92%8Cpy%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="配置QT的python工具链"><br><strong>修改参数</strong></p><div class="gallery stretch" col='2'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/配置QT的c++和py交叉编译环境/4.png" class="lazyload placeholder" data-srcset="/picture/QT/配置QT的c++和py交叉编译环境/4.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="配置QT的python工具链" style="height:400px;"/></div><span class="image-caption">配置QT的python工具链</span></div> <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/配置QT的c++和py交叉编译环境/5.png" class="lazyload placeholder" data-srcset="/picture/QT/配置QT的c++和py交叉编译环境/5.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="配置QT的python工具链" style="height:400px;"/></div><span class="image-caption">配置QT的python工具链</span></div>             </div><p><strong>点击apply应用配置</strong></p><h1 id="测试工具链"><a href="#测试工具链" class="headerlink" title="测试工具链"></a>测试工具链</h1><p><strong>新建一个QT for Python -EMPTY工程，注释所有内容，写入print(“test”)</strong><br><img src="/picture/QT/%E9%85%8D%E7%BD%AEQT%E7%9A%84c++%E5%92%8Cpy%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/6.png" class="lazyload placeholder" data-srcset="/picture/QT/%E9%85%8D%E7%BD%AEQT%E7%9A%84c++%E5%92%8Cpy%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/6.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="测试配置的python工具链"><br><strong>点击上方的工具运行</strong><br><img src="/picture/QT/%E9%85%8D%E7%BD%AEQT%E7%9A%84c++%E5%92%8Cpy%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/7.png" class="lazyload placeholder" data-srcset="/picture/QT/%E9%85%8D%E7%BD%AEQT%E7%9A%84c++%E5%92%8Cpy%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/7.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="测试配置的python工具链"></p><h1 id="链接python文件"><a href="#链接python文件" class="headerlink" title="链接python文件"></a>链接python文件</h1><p><strong>目录下新建一个xxx.py</strong><br><img src="/picture/QT/%E9%85%8D%E7%BD%AEQT%E7%9A%84c++%E5%92%8Cpy%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/8.png" class="lazyload placeholder" data-srcset="/picture/QT/%E9%85%8D%E7%BD%AEQT%E7%9A%84c++%E5%92%8Cpy%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/8.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="测试配置的python工具链"><br><strong>写入如下代码</strong><br><img src="/picture/QT/%E9%85%8D%E7%BD%AEQT%E7%9A%84c++%E5%92%8Cpy%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/9.png" class="lazyload placeholder" data-srcset="/picture/QT/%E9%85%8D%E7%BD%AEQT%E7%9A%84c++%E5%92%8Cpy%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/9.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="测试配置的python工具链"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">def test0():</span><br><span class="line">    print(&quot;test&quot;)</span><br></pre></td></tr></table></figure><p><strong>进入QT目录，修改QT的.pro文件，新增三条语句，运行</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DEPENDPATH += -I E:\Project\Take_orders\common_python_Interpreter\include(之前隔离解释器的路径)</span><br><span class="line">INCLUDEPATH += -I E:\Project\Take_orders\common_python_Interpreter\include(之前隔离解释器的路径)</span><br><span class="line">LIBS += -LE:\Project\Take_orders\common_python_Interpreter\libs -lpython310(之前隔离解释器的路径)</span><br></pre></td></tr></table></figure><p><strong>在main.c内添加头文件Python.h，Python.h需要在QApplication之前</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Python.h&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>在main()内添加如下函数</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">    QApplication <span class="title function_">a</span><span class="params">(argc, argv)</span>;</span><br><span class="line">    MainWindow w;</span><br><span class="line">    w.show();</span><br><span class="line"></span><br><span class="line">    SQL_Connect SQL_Connect;</span><br><span class="line"><span class="comment">//初始化python模块</span></span><br><span class="line">     Py_Initialize();</span><br><span class="line">     <span class="keyword">if</span> ( !Py_IsInitialized() )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     PyRun_SimpleString(<span class="string">&quot;import sys&quot;</span>);</span><br><span class="line">     PyRun_SimpleString(<span class="string">&quot;sys.argv = [&#x27;python.py&#x27;]&quot;</span>);</span><br><span class="line">     PyRun_SimpleString(<span class="string">&quot;sys.path.append(&#x27;./&#x27;)&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//导入mysql.py模块</span></span><br><span class="line">     PyObject* pModule = PyImport_ImportModule(<span class="string">&quot;mysql&quot;</span>);</span><br><span class="line">     <span class="keyword">if</span> (!pModule) &#123;</span><br><span class="line">             <span class="built_in">printf</span>(<span class="string">&quot;Cant open python file!\n&quot;</span>);</span><br><span class="line">             <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">         &#125;</span><br><span class="line">     <span class="comment">//获取scriptSecond模块中的temperImg函数</span></span><br><span class="line">    PyObject* pFunhello= PyObject_GetAttrString(pModule,<span class="string">&quot;test0&quot;</span>);</span><br><span class="line">    <span class="comment">//注释掉的这部分是另一种获得scriptSecond模块中的temperImg函数的方法</span></span><br><span class="line"><span class="comment">//    PyObject* pDict = PyModule_GetDict(pModule);</span></span><br><span class="line"><span class="comment">//       if (!pDict) &#123;</span></span><br><span class="line"><span class="comment">//           printf(&quot;Cant find dictionary.\n&quot;);</span></span><br><span class="line"><span class="comment">//           return -1;</span></span><br><span class="line"><span class="comment">//       &#125;</span></span><br><span class="line"><span class="comment">//    PyObject* pFunhello = PyDict_GetItemString(pDict, &quot;temperImg&quot;);</span></span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span>(!pFunhello)&#123;</span><br><span class="line">         <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;Get function hello failed&quot;</span>&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">         <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="comment">//调用temperImg函数</span></span><br><span class="line">     PyObject_CallFunction(pFunhello,<span class="literal">NULL</span>);</span><br><span class="line">     <span class="comment">//结束，释放python</span></span><br><span class="line">     Py_Finalize();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> a.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/picture/QT/%E9%85%8D%E7%BD%AEQT%E7%9A%84c++%E5%92%8Cpy%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/10.png" class="lazyload placeholder" data-srcset="/picture/QT/%E9%85%8D%E7%BD%AEQT%E7%9A%84c++%E5%92%8Cpy%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/10.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="测试配置的python工具链"></p><p><strong>将py文件复制进入生成的可执行程序的目录内</strong><br><img src="/picture/QT/%E9%85%8D%E7%BD%AEQT%E7%9A%84c++%E5%92%8Cpy%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/11.png" class="lazyload placeholder" data-srcset="/picture/QT/%E9%85%8D%E7%BD%AEQT%E7%9A%84c++%E5%92%8Cpy%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/11.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="测试配置的python工具链"><br><strong>再次运行，发现py脚本成功运行</strong><br><img src="/picture/QT/%E9%85%8D%E7%BD%AEQT%E7%9A%84c++%E5%92%8Cpy%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/12.png" class="lazyload placeholder" data-srcset="/picture/QT/%E9%85%8D%E7%BD%AEQT%E7%9A%84c++%E5%92%8Cpy%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/12.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="测试配置的python工具链"></p>]]></content>
      
      
      
        <tags>
            
            <tag> QT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用的使用技巧</title>
      <link href="/2025/03/23/Python/%E5%B8%B8%E7%94%A8%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/%E5%B8%B8%E7%94%A8%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
      <url>/2025/03/23/Python/%E5%B8%B8%E7%94%A8%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/%E5%B8%B8%E7%94%A8%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="常用镜像源"><a href="#常用镜像源" class="headerlink" title="常用镜像源"></a>常用镜像源</h1><ul><li>清华源      : -i <a href="https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple">https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple</a></li></ul><ul><li>阿里云镜像源: -i <a href="http://mirrors.aliyun.com/pypi/simple/">http://mirrors.aliyun.com/pypi/simple/</a></li></ul><ul><li>中科大镜像源: -i <a href="https://pypi.mirrors.ustc.edu.cn/simple/">https://pypi.mirrors.ustc.edu.cn/simple/</a></li></ul><ul><li>豆瓣镜像源  : -i <a href="http://pypi.douban.com/simple/">http://pypi.douban.com/simple/</a></li></ul><ul><li>华为云镜像源: -i <a href="https://repo.huaweicloud.com/repository/pypi/simple/">https://repo.huaweicloud.com/repository/pypi/simple/</a></li></ul><ul><li>腾讯云镜像源: -i <a href="https://mirrors.cloud.tencent.com/pypi/simple/">https://mirrors.cloud.tencent.com/pypi/simple/</a></li></ul><h1 id="常用小技巧"><a href="#常用小技巧" class="headerlink" title="常用小技巧"></a>常用小技巧</h1><h2 id="创建隔离的python环境"><a href="#创建隔离的python环境" class="headerlink" title="创建隔离的python环境"></a>创建隔离的python环境</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m venv &lt;你的python隔离环境名称&gt;</span><br></pre></td></tr></table></figure><h2 id="给某个隔离的python环境安装其他包"><a href="#给某个隔离的python环境安装其他包" class="headerlink" title="给某个隔离的python环境安装其他包"></a>给某个隔离的python环境安装其他包</h2><p><strong>进入某隔离的解释器下Script路径,执行如下语句(windows)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\python.exe -m pip install numpy</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装MySQL服务器</title>
      <link href="/2025/03/22/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2025/03/22/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="安装MySQL服务器"><a href="#安装MySQL服务器" class="headerlink" title="安装MySQL服务器"></a>安装MySQL服务器</h1><h2 id="下载MySQL安装包"><a href="#下载MySQL安装包" class="headerlink" title="下载MySQL安装包"></a>下载MySQL安装包</h2><ul><li>下载地址:<a href="https://dev.mysql.com/downloads/installer/">https://dev.mysql.com/downloads/installer/</a><br><img src="/picture/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/1.png" class="lazyload placeholder" data-srcset="/picture/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="下载文件"></li></ul><h2 id="安装MySQL服务器-1"><a href="#安装MySQL服务器-1" class="headerlink" title="安装MySQL服务器"></a>安装MySQL服务器</h2><p><img src="/picture/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/2.png" class="lazyload placeholder" data-srcset="/picture/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="安装server"><br><img src="/picture/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/3.png" class="lazyload placeholder" data-srcset="/picture/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="安装server"><br><strong>之后一路next</strong><br><img src="/picture/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/4.png" class="lazyload placeholder" data-srcset="/picture/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/4.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="安装server"><br><img src="/picture/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/5.png" class="lazyload placeholder" data-srcset="/picture/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/5.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="安装server"><br><img src="/picture/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/6.png" class="lazyload placeholder" data-srcset="/picture/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/6.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="安装server"><br><img src="/picture/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/7.png" class="lazyload placeholder" data-srcset="/picture/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/7.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="安装server"><br><img src="/picture/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/8.png" class="lazyload placeholder" data-srcset="/picture/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/8.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="安装server"><br><img src="/picture/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/9.png" class="lazyload placeholder" data-srcset="/picture/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/9.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="安装server"><br><img src="/picture/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/10.png" class="lazyload placeholder" data-srcset="/picture/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/10.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="完成"><br><strong>之后一路next，finish。</strong></p><h2 id="检查安装是否成功"><a href="#检查安装是否成功" class="headerlink" title="检查安装是否成功"></a>检查安装是否成功</h2><p><img src="/picture/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/11.png" class="lazyload placeholder" data-srcset="/picture/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/11.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="安装路径"><br><strong>打开cmd，输入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd C:\Program Files\MySQL\MySQL Server 8.0\bin</span><br></pre></td></tr></table></figure><p><strong>输入密码</strong><br><img src="/picture/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/12.png" class="lazyload placeholder" data-srcset="/picture/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/12.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="提示信息"><br><strong>输入如下代码查看 MySQL的 版本信息</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">status</span><br></pre></td></tr></table></figure><p><strong>提示如下，则安装成功</strong><br><img src="/picture/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/13.png" class="lazyload placeholder" data-srcset="/picture/MySQL/%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1%E5%99%A8/13.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="提示信息"></p>]]></content>
      
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL常用语法</title>
      <link href="/2025/03/22/MySQL/SQL%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/SQL%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
      <url>/2025/03/22/MySQL/SQL%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/SQL%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="wsl常用命令-大小写通用"><a href="#wsl常用命令-大小写通用" class="headerlink" title="wsl常用命令(大小写通用)"></a>wsl常用命令(大小写通用)</h1><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE <span class="operator">&lt;</span>名称<span class="operator">&gt;</span> #如<span class="keyword">CREATE</span> DATABASE test</span><br></pre></td></tr></table></figure><h3 id="删除当前存在的数据库"><a href="#删除当前存在的数据库" class="headerlink" title="删除当前存在的数据库"></a>删除当前存在的数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> DATABASE test;</span><br></pre></td></tr></table></figure><h3 id="查看当前存在的数据库"><a href="#查看当前存在的数据库" class="headerlink" title="查看当前存在的数据库"></a>查看当前存在的数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> DATABASES;</span><br></pre></td></tr></table></figure><h3 id="选择一个数据库"><a href="#选择一个数据库" class="headerlink" title="选择一个数据库"></a>选择一个数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USE test;</span><br></pre></td></tr></table></figure><h2 id="表"><a href="#表" class="headerlink" title="表"></a>表</h2><h3 id="表的创建"><a href="#表的创建" class="headerlink" title="表的创建"></a>表的创建</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> table_name(</span><br><span class="line">    column_name1 data_type(size),</span><br><span class="line">    column_name2 data_type(size),</span><br><span class="line">    column_name3 data_type(size),</span><br><span class="line">....</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><strong>column_name 参数规定表中列的名称。</strong><br><strong>data_type 参数规定列的数据类型（例如 varchar、integer、decimal、date 等等）。</strong><br><strong>size 参数规定表中列的最大长度。</strong></p><ul><li>data_type类型具体地址：<a href="https://www.runoob.com/mysql/mysql-data-types.html">https://www.runoob.com/mysql/mysql-data-types.html</a><br></li></ul><p><strong>例如</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test_table(<span class="comment">--括号内为自定义内容</span></span><br><span class="line">    id <span class="type">INT</span>,</span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">100</span>),</span><br><span class="line">    <span class="type">time</span> <span class="type">VARCHAR</span>(<span class="number">100</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="从别的表筛选后创建新的表"><a href="#从别的表筛选后创建新的表" class="headerlink" title="从别的表筛选后创建新的表"></a>从别的表筛选后创建新的表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> test_table1 <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> test_table <span class="keyword">WHERE</span> id <span class="operator">&lt;</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="查看表"><a href="#查看表" class="headerlink" title="查看表"></a>查看表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DESC</span> test_table;</span><br></pre></td></tr></table></figure><h3 id="修改表的字段的类型"><a href="#修改表的字段的类型" class="headerlink" title="修改表的字段的类型"></a>修改表的字段的类型</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> test_table MODIFY <span class="keyword">COLUMN</span> name <span class="type">VARCHAR</span>(<span class="number">100</span>);</span><br></pre></td></tr></table></figure><h3 id="重命名表的字段的名称"><a href="#重命名表的字段的名称" class="headerlink" title="重命名表的字段的名称"></a>重命名表的字段的名称</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> test_table MODIFY <span class="keyword">COLUMN</span> name <span class="keyword">TO</span> rename;</span><br></pre></td></tr></table></figure><h3 id="插入表的新字段与类型"><a href="#插入表的新字段与类型" class="headerlink" title="插入表的新字段与类型"></a>插入表的新字段与类型</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> test_table <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> new_column <span class="type">INT</span>;</span><br></pre></td></tr></table></figure><h3 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> test_table;</span><br></pre></td></tr></table></figure><h3 id="查看表的数据"><a href="#查看表的数据" class="headerlink" title="查看表的数据"></a>查看表的数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SElECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> test_table;</span><br></pre></td></tr></table></figure><h3 id="表插入数据-完整"><a href="#表插入数据-完整" class="headerlink" title="表插入数据(完整)"></a>表插入数据(完整)</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test_table(id, name, <span class="type">time</span>) <span class="keyword">VALUES</span> (<span class="number">1</span>,<span class="string">&#x27;时间&#x27;</span>,<span class="string">&#x27;2025.03.22&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="表插入数据-部分"><a href="#表插入数据-部分" class="headerlink" title="表插入数据(部分)"></a>表插入数据(部分)</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test_table(name) <span class="keyword">VALUES</span> (<span class="string">&#x27;无2&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="表插入多个数据"><a href="#表插入多个数据" class="headerlink" title="表插入多个数据"></a>表插入多个数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test_table(id, name, <span class="type">time</span>) <span class="keyword">VALUES</span> (<span class="number">3</span>,<span class="string">&#x27;无2&#x27;</span>,<span class="string">&#x27;2025.03.22&#x27;</span>),(<span class="number">3</span>,<span class="string">&#x27;无2&#x27;</span>,<span class="string">&#x27;2025.03.22&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="表插入别的表筛选后的数据"><a href="#表插入别的表筛选后的数据" class="headerlink" title="表插入别的表筛选后的数据"></a>表插入别的表筛选后的数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test_table1 <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> test_table <span class="keyword">WHERE</span> id <span class="keyword">BETWEEN</span> <span class="number">1</span> <span class="keyword">AND</span> <span class="number">5</span>;</span><br></pre></td></tr></table></figure><h3 id="将表某个字段在没有赋值时默认为1"><a href="#将表某个字段在没有赋值时默认为1" class="headerlink" title="将表某个字段在没有赋值时默认为1"></a>将表某个字段在没有赋值时默认为1</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> test_table MODIFY name <span class="type">VARCHAR</span>(<span class="number">200</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;1&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="修改表内已经赋值的数据"><a href="#修改表内已经赋值的数据" class="headerlink" title="修改表内已经赋值的数据"></a>修改表内已经赋值的数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> test_table <span class="keyword">SET</span> id <span class="operator">=</span> <span class="number">2</span> <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;无2&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="设置table的全部字段为某一个值"><a href="#设置table的全部字段为某一个值" class="headerlink" title="设置table的全部字段为某一个值"></a>设置table的全部字段为某一个值</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> test_table <span class="keyword">SET</span> name <span class="operator">=</span> <span class="string">&#x27;test&#x27;</span>,<span class="type">time</span> <span class="operator">=</span> <span class="string">&#x27;2025.03.22&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="表删除指定字段"><a href="#表删除指定字段" class="headerlink" title="表删除指定字段"></a>表删除指定字段</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> test_table <span class="keyword">WHERE</span> <span class="type">time</span> <span class="operator">=</span> <span class="string">&#x27;2025.03.22&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="表的查找"><a href="#表的查找" class="headerlink" title="表的查找"></a>表的查找</h2><p><strong>逻辑运算符的优先级</strong><br><strong>NOT &gt; AND &gt; OR</strong></p><h3 id="查找有某个范围条件的字段"><a href="#查找有某个范围条件的字段" class="headerlink" title="查找有某个范围条件的字段"></a>查找有某个范围条件的字段</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> test_table <span class="keyword">WHERE</span> id <span class="operator">&gt;</span> <span class="number">1</span> <span class="keyword">AND</span> (id <span class="operator">&lt;</span> <span class="number">5</span> <span class="keyword">or</span> id <span class="operator">&lt;</span> <span class="number">1</span>) <span class="keyword">AND</span> id <span class="operator">&gt;</span> <span class="number">5</span>;</span><br></pre></td></tr></table></figure><h3 id="查找有某个指定条件的字段"><a href="#查找有某个指定条件的字段" class="headerlink" title="查找有某个指定条件的字段"></a>查找有某个指定条件的字段</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> test_table <span class="keyword">WHERE</span> id <span class="keyword">IN</span> (<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>);</span><br></pre></td></tr></table></figure><h3 id="查找1-10之间条件的字段"><a href="#查找1-10之间条件的字段" class="headerlink" title="查找1-10之间条件的字段"></a>查找1-10之间条件的字段</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> test_table <span class="keyword">WHERE</span> id <span class="keyword">BETWEEN</span> <span class="number">1</span> <span class="keyword">AND</span> <span class="number">10</span>;</span><br></pre></td></tr></table></figure><h3 id="查找不在1-10之间条件的字段"><a href="#查找不在1-10之间条件的字段" class="headerlink" title="查找不在1-10之间条件的字段"></a>查找不在1-10之间条件的字段</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> test_table <span class="keyword">WHERE</span> id <span class="keyword">NOT</span> <span class="keyword">BETWEEN</span> <span class="number">1</span> <span class="keyword">AND</span> <span class="number">10</span>;</span><br></pre></td></tr></table></figure><h3 id="模糊查找"><a href="#模糊查找" class="headerlink" title="模糊查找"></a>模糊查找</h3><p><strong>%代表有任意多个字符</strong><br><strong>而_代表确定个数的字符</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> test_table <span class="keyword">WHERE</span> <span class="type">time</span> <span class="keyword">like</span> <span class="string">&#x27;2%&#x27;</span>;<span class="comment">--代表查找字符内含有2，且后面含有任意多个字符，如2015</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> test_table <span class="keyword">WHERE</span> <span class="type">time</span> <span class="keyword">like</span> <span class="string">&#x27;%2%&#x27;</span>;<span class="comment">--代表查找字符内含有2，且前面和后面含有任意多个字符都可以，如2015，02015</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> test_table <span class="keyword">WHERE</span> <span class="type">time</span> <span class="keyword">like</span> <span class="string">&#x27;2_&#x27;</span>;<span class="comment">--代表查找字符内含有2，且开头为2，固定为2个字符，如23</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> test_table <span class="keyword">WHERE</span> <span class="type">time</span> <span class="keyword">like</span> <span class="string">&#x27;2__&#x27;</span>;<span class="comment">--代表查找字符内含有2，且开头为2，固定为3个字符，如231</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> test_table <span class="keyword">WHERE</span> <span class="type">time</span> <span class="keyword">like</span> <span class="string">&#x27;_2_&#x27;</span>;<span class="comment">--代表查找字符内含有2，且中间为2，固定为3个字符，如321</span></span><br></pre></td></tr></table></figure><h3 id="查找不在1-10之间条件的字段-1"><a href="#查找不在1-10之间条件的字段-1" class="headerlink" title="查找不在1-10之间条件的字段"></a>查找不在1-10之间条件的字段</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> test_table <span class="keyword">WHERE</span> <span class="type">time</span> <span class="keyword">NOT</span> <span class="keyword">BETWEEN</span> <span class="number">1</span> <span class="keyword">AND</span> <span class="number">10</span>;</span><br></pre></td></tr></table></figure><h2 id="数据的导入导出"><a href="#数据的导入导出" class="headerlink" title="数据的导入导出"></a>数据的导入导出</h2><h3 id="导出DATABASE的全部table为sql后缀文件"><a href="#导出DATABASE的全部table为sql后缀文件" class="headerlink" title="导出DATABASE的全部table为sql后缀文件"></a>导出DATABASE的全部table为sql后缀文件</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump <span class="operator">-</span>u <span class="operator">&lt;</span>用户名<span class="operator">&gt;</span> <span class="operator">-</span>p <span class="operator">&lt;</span>DATABASE名称<span class="operator">&gt;</span> <span class="operator">&gt;</span> 名称.<span class="keyword">sql</span></span><br></pre></td></tr></table></figure><h3 id="导出某table为sql后缀文件"><a href="#导出某table为sql后缀文件" class="headerlink" title="导出某table为sql后缀文件"></a>导出某table为sql后缀文件</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump <span class="operator">-</span>u <span class="operator">&lt;</span>用户名<span class="operator">&gt;</span> <span class="operator">-</span>p <span class="operator">&lt;</span>DATABASE名称<span class="operator">&gt;</span> <span class="operator">&lt;</span><span class="keyword">table</span>的名称<span class="operator">&gt;</span>   <span class="operator">&gt;</span>  名称.<span class="keyword">sql</span></span><br></pre></td></tr></table></figure><h3 id="导入某-sql文件为sql后缀文件"><a href="#导入某-sql文件为sql后缀文件" class="headerlink" title="导入某.sql文件为sql后缀文件"></a>导入某.sql文件为sql后缀文件</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>u <span class="operator">&lt;</span>用户名<span class="operator">&gt;</span> <span class="operator">-</span>p <span class="operator">&lt;</span>自定义DATABASE名称<span class="operator">&gt;</span> <span class="operator">&gt;</span> 名称.<span class="keyword">sql</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于cubemx生成的rtos代码报错</title>
      <link href="/2025/03/19/STM32/%E5%85%B3%E4%BA%8Ecubemx%E7%94%9F%E6%88%90%E7%9A%84rtos%E4%BB%A3%E7%A0%81%E6%8A%A5%E9%94%99/%E5%85%B3%E4%BA%8Ecubemx%E7%94%9F%E6%88%90%E7%9A%84rtos%E4%BB%A3%E7%A0%81%E6%8A%A5%E9%94%99/"/>
      <url>/2025/03/19/STM32/%E5%85%B3%E4%BA%8Ecubemx%E7%94%9F%E6%88%90%E7%9A%84rtos%E4%BB%A3%E7%A0%81%E6%8A%A5%E9%94%99/%E5%85%B3%E4%BA%8Ecubemx%E7%94%9F%E6%88%90%E7%9A%84rtos%E4%BB%A3%E7%A0%81%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<h1 id="主控芯片Stm32f103zet6"><a href="#主控芯片Stm32f103zet6" class="headerlink" title="主控芯片Stm32f103zet6"></a>主控芯片Stm32f103zet6</h1><h2 id="库来源STM32CubeMX，开发环境Keil"><a href="#库来源STM32CubeMX，开发环境Keil" class="headerlink" title="库来源STM32CubeMX，开发环境Keil"></a>库来源STM32CubeMX，开发环境Keil</h2><h3 id="stm32的STM32CubeMX的Freertos的简单配置"><a href="#stm32的STM32CubeMX的Freertos的简单配置" class="headerlink" title="stm32的STM32CubeMX的Freertos的简单配置"></a>stm32的STM32CubeMX的Freertos的简单配置</h3><div class="gallery stretch" col='3'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/STM32/关于cubemx生成的rtos代码报错/1.jpg" class="lazyload placeholder" data-srcset="/picture/STM32/关于cubemx生成的rtos代码报错/1.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图一" style="height:300px;"/></div><span class="image-caption">图一</span></div> <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/STM32/关于cubemx生成的rtos代码报错/2.jpg" class="lazyload placeholder" data-srcset="/picture/STM32/关于cubemx生成的rtos代码报错/2.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图二" style="height:300px;"/></div><span class="image-caption">图二</span></div>             </div><div class="gallery stretch" col='2'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/STM32/关于cubemx生成的rtos代码报错/3.jpg" class="lazyload placeholder" data-srcset="/picture/STM32/关于cubemx生成的rtos代码报错/3.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图三" style="height:300px;"/></div><span class="image-caption">图三</span></div> <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/STM32/关于cubemx生成的rtos代码报错/4.jpg" class="lazyload placeholder" data-srcset="/picture/STM32/关于cubemx生成的rtos代码报错/4.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图四" style="height:300px;"/></div><span class="image-caption">图四</span></div>             </div><h4 id="报错信息"><a href="#报错信息" class="headerlink" title="报错信息"></a>报错信息</h4><p><img src="/picture/STM32/%E5%85%B3%E4%BA%8Ecubemx%E7%94%9F%E6%88%90%E7%9A%84rtos%E4%BB%A3%E7%A0%81%E6%8A%A5%E9%94%99/6.jpg" class="lazyload placeholder" data-srcset="/picture/STM32/%E5%85%B3%E4%BA%8Ecubemx%E7%94%9F%E6%88%90%E7%9A%84rtos%E4%BB%A3%E7%A0%81%E6%8A%A5%E9%94%99/6.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="报错信息"></p><h4 id="报错原因"><a href="#报错原因" class="headerlink" title="报错原因"></a>报错原因</h4><p><strong>KEIL5.37以上默认编译器6，导致rvd中的arm_cm4f中的文件不适配。</strong></p><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p><strong>在工程内找到该目录，将里面两个文件替换为从官网下载的Freertos文件</strong><br><img src="/picture/STM32/%E5%85%B3%E4%BA%8Ecubemx%E7%94%9F%E6%88%90%E7%9A%84rtos%E4%BB%A3%E7%A0%81%E6%8A%A5%E9%94%99/7.jpg" class="lazyload placeholder" data-srcset="/picture/STM32/%E5%85%B3%E4%BA%8Ecubemx%E7%94%9F%E6%88%90%E7%9A%84rtos%E4%BB%A3%E7%A0%81%E6%8A%A5%E9%94%99/7.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Keil文件"><br><strong>官方文件下载地址</strong><br><img src="/picture/STM32/%E5%85%B3%E4%BA%8Ecubemx%E7%94%9F%E6%88%90%E7%9A%84rtos%E4%BB%A3%E7%A0%81%E6%8A%A5%E9%94%99/8.png" class="lazyload placeholder" data-srcset="/picture/STM32/%E5%85%B3%E4%BA%8Ecubemx%E7%94%9F%E6%88%90%E7%9A%84rtos%E4%BB%A3%E7%A0%81%E6%8A%A5%E9%94%99/8.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="官方文件"></p><ul><li>官方文件下载地址：<a href="https://sourceforge.net/projects/freertos/files/FreeRTOS/">https://sourceforge.net/projects/freertos/files/FreeRTOS/</a><br><strong>或者在STM32Cube_package包内找到GCC下的ARM_CM3文件</strong><br><img src="/picture/STM32/%E5%85%B3%E4%BA%8Ecubemx%E7%94%9F%E6%88%90%E7%9A%84rtos%E4%BB%A3%E7%A0%81%E6%8A%A5%E9%94%99/9.png" class="lazyload placeholder" data-srcset="/picture/STM32/%E5%85%B3%E4%BA%8Ecubemx%E7%94%9F%E6%88%90%E7%9A%84rtos%E4%BB%A3%E7%A0%81%E6%8A%A5%E9%94%99/9.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="STM32Cube_package"></li></ul><h4 id="编译成功"><a href="#编译成功" class="headerlink" title="编译成功"></a>编译成功</h4><p><img src="/picture/STM32/%E5%85%B3%E4%BA%8Ecubemx%E7%94%9F%E6%88%90%E7%9A%84rtos%E4%BB%A3%E7%A0%81%E6%8A%A5%E9%94%99/10.png" class="lazyload placeholder" data-srcset="/picture/STM32/%E5%85%B3%E4%BA%8Ecubemx%E7%94%9F%E6%88%90%E7%9A%84rtos%E4%BB%A3%E7%A0%81%E6%8A%A5%E9%94%99/10.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="编译成功"></p>]]></content>
      
      
      
        <tags>
            
            <tag> STM32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim指令</title>
      <link href="/2024/11/13/Linux/Linux%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/vim%E6%8C%87%E4%BB%A4/"/>
      <url>/2024/11/13/Linux/Linux%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/vim%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="vim常用方法"><a href="#vim常用方法" class="headerlink" title="vim常用方法"></a>vim常用方法</h1><h2 id="复制当前行"><a href="#复制当前行" class="headerlink" title="复制当前行"></a>复制当前行</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yy </span><br></pre></td></tr></table></figure><h2 id="复制从当前行开始的5行"><a href="#复制从当前行开始的5行" class="headerlink" title="复制从当前行开始的5行"></a>复制从当前行开始的5行</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5yy </span><br></pre></td></tr></table></figure><h2 id="从第一行复制到最后一行"><a href="#从第一行复制到最后一行" class="headerlink" title="从第一行复制到最后一行"></a>从第一行复制到最后一行</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">y1G</span><br></pre></td></tr></table></figure><h2 id="从光标复制到最后一行"><a href="#从光标复制到最后一行" class="headerlink" title="从光标复制到最后一行"></a>从光标复制到最后一行</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yG</span><br></pre></td></tr></table></figure><h2 id="剪切一行"><a href="#剪切一行" class="headerlink" title="剪切一行"></a>剪切一行</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd</span><br></pre></td></tr></table></figure><h2 id="粘贴"><a href="#粘贴" class="headerlink" title="粘贴"></a>粘贴</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p</span><br></pre></td></tr></table></figure><h2 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">u</span><br></pre></td></tr></table></figure><h2 id="将光标所在行合并到下一行"><a href="#将光标所在行合并到下一行" class="headerlink" title="将光标所在行合并到下一行"></a>将光标所在行合并到下一行</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">J</span><br></pre></td></tr></table></figure><h2 id="删除10行"><a href="#删除10行" class="headerlink" title="删除10行"></a>删除10行</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10cj</span><br></pre></td></tr></table></figure><h2 id="保存并退出"><a href="#保存并退出" class="headerlink" title="保存并退出"></a>保存并退出</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:wq</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZZ</span><br></pre></td></tr></table></figure><h2 id="不保存并退出"><a href="#不保存并退出" class="headerlink" title="不保存并退出"></a>不保存并退出</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">q!</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZQ</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wsl常用命令</title>
      <link href="/2024/11/13/WSL/wsl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2024/11/13/WSL/wsl%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="wsl常用命令"><a href="#wsl常用命令" class="headerlink" title="wsl常用命令"></a>wsl常用命令</h1><h2 id="列出可下载的Linux发行版列表"><a href="#列出可下载的Linux发行版列表" class="headerlink" title="列出可下载的Linux发行版列表"></a>列出可下载的Linux发行版列表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --list --online</span><br></pre></td></tr></table></figure><h2 id="下载某个Linux发行版"><a href="#下载某个Linux发行版" class="headerlink" title="下载某个Linux发行版"></a>下载某个Linux发行版</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --install Ubuntu-18.04</span><br></pre></td></tr></table></figure><h2 id="退出wsl进入的linux系统"><a href="#退出wsl进入的linux系统" class="headerlink" title="退出wsl进入的linux系统"></a>退出wsl进入的linux系统</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + D</span><br></pre></td></tr></table></figure><h2 id="wsl列出已经安装的Ubuntu系统"><a href="#wsl列出已经安装的Ubuntu系统" class="headerlink" title="wsl列出已经安装的Ubuntu系统"></a>wsl列出已经安装的Ubuntu系统</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wslconfig /list</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --list</span><br></pre></td></tr></table></figure><h2 id="启动WSL的某个Linux版本"><a href="#启动WSL的某个Linux版本" class="headerlink" title="启动WSL的某个Linux版本"></a>启动WSL的某个Linux版本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl -d Ubuntu-18.04</span><br></pre></td></tr></table></figure><h2 id="wsl切换默认Ubuntu系统"><a href="#wsl切换默认Ubuntu系统" class="headerlink" title="wsl切换默认Ubuntu系统"></a>wsl切换默认Ubuntu系统</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wslconfig /setdefault Ubuntu-18.04</span><br></pre></td></tr></table></figure><h2 id="设置WSL默认版本为wsl2"><a href="#设置WSL默认版本为wsl2" class="headerlink" title="设置WSL默认版本为wsl2"></a>设置WSL默认版本为wsl2</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --set-default-version 2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> WSL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wsl的安装与迁移</title>
      <link href="/2024/11/05/WSL/wsl%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E8%BF%81%E7%A7%BB/"/>
      <url>/2024/11/05/WSL/wsl%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E8%BF%81%E7%A7%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="官方安装资料"><a href="#官方安装资料" class="headerlink" title="官方安装资料"></a>官方安装资料</h1><h2 id="mincrosft官方手动安装方法"><a href="#mincrosft官方手动安装方法" class="headerlink" title="mincrosft官方手动安装方法"></a>mincrosft官方手动安装方法</h2><p>官网:<a href="https://learn.microsoft.com/zh-cn/windows/wsl/install-manual#step-1---enable-the-windows-subsystem-for-linux">https://learn.microsoft.com/zh-cn/windows/wsl/install-manual#step-1---enable-the-windows-subsystem-for-linux</a></p><h2 id="github的wsl安装包地址"><a href="#github的wsl安装包地址" class="headerlink" title="github的wsl安装包地址"></a>github的wsl安装包地址</h2><p>官网:<a href="https://github.com/microsoft/WSL/releases">https://github.com/microsoft/WSL/releases</a></p><h1 id="windows下准备"><a href="#windows下准备" class="headerlink" title="windows下准备"></a>windows下准备</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="CPU虚拟化开启"><a href="#CPU虚拟化开启" class="headerlink" title="CPU虚拟化开启"></a>CPU虚拟化开启</h3><p>打开任务管理器，performance选项里CPU选项看到<b>Virtualization:Enabled</b>，即为虚拟化开启</p><div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/WSL/1.png" class="lazyload placeholder" data-srcset="/picture/WSL/1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"/></div></div> <h3 id="打开Windwos-Subsystem-for-Linux-适用于Linux的Windows子系统-与Virtual-Machine-Platform-虚拟化平台"><a href="#打开Windwos-Subsystem-for-Linux-适用于Linux的Windows子系统-与Virtual-Machine-Platform-虚拟化平台" class="headerlink" title="打开Windwos Subsystem for Linux(适用于Linux的Windows子系统)与Virtual Machine Platform(虚拟化平台)"></a>打开Windwos Subsystem for Linux(适用于Linux的Windows子系统)与Virtual Machine Platform(虚拟化平台)</h3><h4 id="图形化打开方式"><a href="#图形化打开方式" class="headerlink" title="图形化打开方式"></a>图形化打开方式</h4><p>使用管理员权限打开powershell，输入<b>optionalfeatures</b>打开windows功能，将里面的Windwos Subsystem for Linux(适用于Linux的Windows子系统)与Virtual Machine Platform(虚拟化平台)</p><h4 id="代码打开方式"><a href="#代码打开方式" class="headerlink" title="代码打开方式"></a>代码打开方式</h4><p>使用管理员身份打开powershell输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart</span><br><span class="line">dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart</span><br></pre></td></tr></table></figure><div class="note "><p><strong>在windows10的某些后期版本中，貌似已经不需要开启了</strong></p></div> <h3 id="Windows下subsystem子系统（wsl）的默认安装路径"><a href="#Windows下subsystem子系统（wsl）的默认安装路径" class="headerlink" title="Windows下subsystem子系统（wsl）的默认安装路径"></a>Windows下subsystem子系统（wsl）的默认安装路径</h3><p><b>C:\Users\你的用户名\AppData\Local\Packages\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\LocalState\rootfs</b></p><h2 id="修改默认安装目录到其他盘"><a href="#修改默认安装目录到其他盘" class="headerlink" title="修改默认安装目录到其他盘"></a>修改默认安装目录到其他盘</h2><ol><li><p>创建目标目录,例如E:\WSL </p></li><li><p>导出分发版为tar文件到d盘。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --export Ubuntu-18.04 E:\WSL\tar\Ubuntu-18.04.tar</span><br></pre></td></tr></table></figure><p>将当前的 Ubuntu 发行版导出为一个tar文件,将当前的 Ubuntu 发行版导出为一个 tar 文件</p></li><li><p>列出当前安装的Linux版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl -l -v</span><br></pre></td></tr></table></figure></li><li><p>注销当前的Linux版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --unregister Ubuntu-18.04</span><br></pre></td></tr></table></figure></li><li><p>导入 WSL 发行版到新的位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --import Ubuntu-18.04 E:\WSL\Ubuntu-18.04 E:\WSL\tar\Ubuntu-18.04.tar</span><br></pre></td></tr></table></figure></li><li><p>验证是否迁移成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl -l -v</span><br></pre></td></tr></table></figure></li></ol><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><h3 id="1-is-not-a-valid-Win32-application"><a href="#1-is-not-a-valid-Win32-application" class="headerlink" title="%1 is not a valid Win32 application"></a><strong>%1 is not a valid Win32 application</strong></h3><h4 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h4><p><b>it looks like the MSIX version of wsl.exe is corrupted, which is causing that error.And then installing the latest MSI solve the issue.(下载最新版的wsl版本)</b></p><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>在powershell输入,删除wsl当前版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-AppxPackage MicrosoftCorporationII.WindowsSubsystemforLinux -AllUsers  | Remove-AppxPackage -AllUsers</span><br></pre></td></tr></table></figure><p>然后在github下载最新的wsl安装包，根据windows下的引导安装。<br></p><p>安装完成后打开PowerShell或者CMD输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --install</span><br></pre></td></tr></table></figure><p>即可完成安装<br></p><p>若想查看安装的是wsl2还是wsl，在输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --list --verbose</span><br></pre></td></tr></table></figure><p>输出将显示 WSL 中已安装的 Linux 发行版，以及它们的版本。在 “WSL” 列下可以将看到 “wsl” 或 “wsl2”，这表示每个发行版的 WSL 版本。</p>]]></content>
      
      
      
        <tags>
            
            <tag> WSL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web前端知识</title>
      <link href="/2024/10/03/%E7%BD%91%E9%A1%B5Web/Web%E5%89%8D%E7%AB%AF/Web%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86/"/>
      <url>/2024/10/03/%E7%BD%91%E9%A1%B5Web/Web%E5%89%8D%E7%AB%AF/Web%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>esp-idf编译遇到的坑</title>
      <link href="/2024/09/04/ESP32/esp-idf%E7%BC%96%E8%AF%91/esp-idf%E7%BC%96%E8%AF%91%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/"/>
      <url>/2024/09/04/ESP32/esp-idf%E7%BC%96%E8%AF%91/esp-idf%E7%BC%96%E8%AF%91%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<h1 id="编译遇到的问题"><a href="#编译遇到的问题" class="headerlink" title="编译遇到的问题"></a>编译遇到的问题</h1><h2 id="错误没有fatfs组件"><a href="#错误没有fatfs组件" class="headerlink" title="错误没有fatfs组件"></a>错误没有fatfs组件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fatal error: esp_vfs_fat.h: No such file or directory</span><br></pre></td></tr></table></figure><br><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p><strong>缺少fatfs组件</strong><br><br></p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p><strong>在组件内部添加fatfs，例如</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">set(COMPONENT_REQUIRES</span><br><span class="line">    esp32-camera</span><br><span class="line">    esp-face</span><br><span class="line">    nvs_flash</span><br><span class="line">    esp_http_server</span><br><span class="line">    fb_gfx</span><br><span class="line">    mdns</span><br><span class="line">fatfs</span><br><span class="line">wpa_supplicant</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><br><h2 id="ccache错误-libsodium库报poly1305-c-obj类文件找不到"><a href="#ccache错误-libsodium库报poly1305-c-obj类文件找不到" class="headerlink" title="ccache错误,libsodium库报poly1305.c.obj类文件找不到"></a>ccache错误,libsodium库报poly1305.c.obj类文件找不到</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">error: Failed to create temporary file for esp-idf/libsodium/CMakeFiles/__idf_libsodium.dir/libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c.obj: No such file or directory</span><br></pre></td></tr></table></figure><h3 id="原因-1"><a href="#原因-1" class="headerlink" title="原因"></a>原因</h3><p><strong>在Windows上编译libsodioum时会出现此问题：</strong><br><strong>1.ESP-IDF工具(.espressif)的路径超过90个字符。</strong><br><strong>2.ESP-IDF的路径长度超过90个字符。</strong><br><strong>3.工程路径超过90个字符。</strong><br><strong>这似乎是ESP-IDF中较旧版本的CCache中的错误。</strong><br><br></p><h3 id="解决办法-1"><a href="#解决办法-1" class="headerlink" title="解决办法"></a>解决办法</h3><p><strong>1.尽量不要去clean或者menuconfig</strong><br><strong>2.重命名文件夹名</strong><br><strong>3.删除缓存文件</strong></p><blockquote><p><strong>错误内容含有ccache，而esp-idf编译环境又用到ccache编译缓存工具【见.espressif&#x2F;tools&#x2F;ccache】</strong><br><strong>ccache的功效，每次编译新建项目，都会在默认的ccache目录【C:\Users\Administrator\AppData\Roaming.ccache】创建对应的缓存记录，而重新编译会从该记录拿出用到的obj对象文件出来，因此如果删除该ccache目录下的所有文件，然后回到项目目录，重新编译。</strong></p></blockquote><p><strong>4.乐鑫官方方法使用如下禁止ccache的方法编译</strong></p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py --no-ccache build</span><br></pre></td></tr></table></figure></blockquote><p><strong>5.采用新版本idf</strong><br><br></p><h2 id="坏环境-idf4-0"><a href="#坏环境-idf4-0" class="headerlink" title="坏环境(idf4.0)"></a>坏环境(idf4.0)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">can&#x27;t open file &#x27;E:\\tools\\idf.py&#x27;: [Errno 2] No such file or directory</span><br></pre></td></tr></table></figure><br><h3 id="原因-2"><a href="#原因-2" class="headerlink" title="原因"></a>原因</h3><p><strong>在build时Ctrl+C打断</strong><br><br></p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p><strong>进入espidf的环境重新运行install.bat</strong><br><br></p>]]></content>
      
      
      
        <tags>
            
            <tag> ESP32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>esp-idf的安装</title>
      <link href="/2024/09/03/ESP32/esp-idf%E7%9A%84%E5%AE%89%E8%A3%85/esp-idf%E7%9A%84%E5%AE%89%E8%A3%85/"/>
      <url>/2024/09/03/ESP32/esp-idf%E7%9A%84%E5%AE%89%E8%A3%85/esp-idf%E7%9A%84%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="esp-idf的下载"><a href="#esp-idf的下载" class="headerlink" title="esp-idf的下载"></a>esp-idf的下载</h1><h2 id="去esp32的仓库"><a href="#去esp32的仓库" class="headerlink" title="去esp32的仓库"></a>去esp32的仓库</h2><ul><li>如 <a href="https://github.com/espressif/esp-idf/tree/master">https://github.com/espressif/esp-idf/tree/master</a></li></ul><h3 id="当文件夹后方带有-时，直接下载是无法成功下载的，例如如下的下载代码"><a href="#当文件夹后方带有-时，直接下载是无法成功下载的，例如如下的下载代码" class="headerlink" title="当文件夹后方带有@时，直接下载是无法成功下载的，例如如下的下载代码"></a>当文件夹后方带有@时，直接下载是无法成功下载的，例如如下的下载代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/espressif/esp-idf.git</span><br></pre></td></tr></table></figure><p><img src="/picture/ESP32/esp-idf%E7%9A%84%E5%AE%89%E8%A3%85/1.png" class="lazyload placeholder" data-srcset="/picture/ESP32/esp-idf%E7%9A%84%E5%AE%89%E8%A3%85/1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图一"><br><br></p><h3 id="只有加上–recurse-submodules时可以连带下载子模块"><a href="#只有加上–recurse-submodules时可以连带下载子模块" class="headerlink" title="只有加上–recurse-submodules时可以连带下载子模块"></a>只有加上–recurse-submodules时可以连带下载子模块</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone --recurse-submodules https://github.com/espressif/esp-idf.git</span><br></pre></td></tr></table></figure><br><h3 id="某些仓库可能会有分支，但是切换分支后url却没有改变，此时我们可以使用"><a href="#某些仓库可能会有分支，但是切换分支后url却没有改变，此时我们可以使用" class="headerlink" title="某些仓库可能会有分支，但是切换分支后url却没有改变，此时我们可以使用"></a>某些仓库可能会有分支，但是切换分支后url却没有改变，此时我们可以使用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone --recurse-submodules -b 分支名 https://github.com/espressif/esp-idf.git</span><br></pre></td></tr></table></figure><blockquote><p><strong>如</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone --recurse-submodules -b release/v4.0 https://github.com/espressif/esp-idf.git</span><br></pre></td></tr></table></figure><br></blockquote><h3 id="或者可以先git下载未附带子模块的源码，然后进入源码内部，手动更新子模块"><a href="#或者可以先git下载未附带子模块的源码，然后进入源码内部，手动更新子模块" class="headerlink" title="或者可以先git下载未附带子模块的源码，然后进入源码内部，手动更新子模块"></a>或者可以先git下载未附带子模块的源码，然后进入源码内部，手动更新子模块</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule update --init --recursive</span><br></pre></td></tr></table></figure><br><h3 id="该指令可以查看子模块是否被正确初始化和更新"><a href="#该指令可以查看子模块是否被正确初始化和更新" class="headerlink" title="该指令可以查看子模块是否被正确初始化和更新"></a>该指令可以查看子模块是否被正确初始化和更新</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule status</span><br></pre></td></tr></table></figure><br><h3 id="尽量使用全局模式"><a href="#尽量使用全局模式" class="headerlink" title="尽量使用全局模式"></a>尽量使用全局模式</h3><blockquote><p><strong><font size="4">在规则模式下非常容易，返回443或者error，一旦有包未下载，需要断开并重新下载</font></strong></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> ESP32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Visio安装</title>
      <link href="/2024/08/29/Mircosoft/Visio%E5%AE%89%E8%A3%85/Visio%E5%AE%89%E8%A3%85/"/>
      <url>/2024/08/29/Mircosoft/Visio%E5%AE%89%E8%A3%85/Visio%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="Visio安装，破解"><a href="#Visio安装，破解" class="headerlink" title="Visio安装，破解"></a>Visio安装，破解</h1><h2 id="Visio安装，KMS破解工具，可以破解office和visio本体"><a href="#Visio安装，KMS破解工具，可以破解office和visio本体" class="headerlink" title="Visio安装，KMS破解工具，可以破解office和visio本体"></a>Visio安装，KMS破解工具，可以破解office和visio本体</h2><ul><li>网址: <a href="https://github.com/zbezj/HEU_KMS_Activator/releases">https://github.com/zbezj/HEU_KMS_Activator/releases</a></li></ul><ul><li>office和visio任选一百度云版本版本</li></ul><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><ul><li><strong>Office错误代码:30015-45 ，Visio错误代码:30204-44</strong><blockquote><p><strong>一般是由于以前安装的office没有卸载干净,且在注册表自己清理无用。</strong><br><strong>解决方法安装SetupProd_OffScrub.exe，根据引导将过去office残留卸载干净。</strong></p></blockquote></li></ul><h2 id="SetupProd-OffScrub-exe下载地址"><a href="#SetupProd-OffScrub-exe下载地址" class="headerlink" title="SetupProd_OffScrub.exe下载地址"></a>SetupProd_OffScrub.exe下载地址</h2><ul><li>网址: <a href="https://support.microsoft.com/zh-cn/office/%E8%87%AA%E5%8A%A8%E5%8D%B8%E8%BD%BD-office-9ad57b43-fa12-859a-9cf0-b694637b3b05">https://support.microsoft.com/zh-cn/office/%E8%87%AA%E5%8A%A8%E5%8D%B8%E8%BD%BD-office-9ad57b43-fa12-859a-9cf0-b694637b3b05</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 软件安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Freertos的一些函数</title>
      <link href="/2024/08/16/RTOS/Freertos/%E5%85%B3%E4%BA%8EFreertos%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0/"/>
      <url>/2024/08/16/RTOS/Freertos/%E5%85%B3%E4%BA%8EFreertos%E7%9A%84%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="关于RTOS"><a href="#关于RTOS" class="headerlink" title="关于RTOS"></a>关于RTOS</h1><h2 id="创建任务函数xTaskCreate"><a href="#创建任务函数xTaskCreate" class="headerlink" title="创建任务函数xTaskCreate"></a>创建任务函数xTaskCreate</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BaseType_t <span class="title">xTaskCreate</span><span class="params">( TaskFunction_t pxTaskCode,</span></span></span><br><span class="line"><span class="params"><span class="function">                        <span class="type">const</span> <span class="type">char</span> * <span class="type">const</span> pcName, </span></span></span><br><span class="line"><span class="params"><span class="function">                        <span class="type">const</span> configSTACK_DEPTH_TYPE usStackDepth,</span></span></span><br><span class="line"><span class="params"><span class="function">                        <span class="type">void</span> * <span class="type">const</span> pvParameters,</span></span></span><br><span class="line"><span class="params"><span class="function">                        UBaseType_t uxPriority,</span></span></span><br><span class="line"><span class="params"><span class="function">                        TaskHandle_t * <span class="type">const</span> pxCreatedTask )</span></span></span><br></pre></td></tr></table></figure><h3 id="参数意义"><a href="#参数意义" class="headerlink" title="参数意义"></a>参数意义</h3><ul><li><strong><font size="4">（1）TaskFunction_t</font></strong><br><strong>typedef void (*TaskFunction_t)(void *); ： 函数指针</strong></li></ul><ul><li><strong><font size="4">（2）const char * const pcName ：任务名字</font></strong></li></ul><ul><li><strong><font size="4">（3）configSTACK_DEPTH_TYPE </font></strong><br><strong>#define configSTACK_DEPTH_TYPE uint16_t ：是无符号的2字节数值,表示栈的深度大小,实际由malloc函数分配大小</strong></li></ul><ul><li><strong><font size="4">（4）void * const pvParameters ：是要传入的参数</font></strong></li></ul><ul><li><strong><font size="4">（5）UBaseType_t uxPriority </font></strong><br><strong>typedef unsigned short UBaseType_t;：是一个无符号的整形数，表示优先级的大小，数值越大优先级越大</strong></li></ul><ul><li><strong><font size="4">（6）TaskHandle_t * const pxCreatedTask</font></strong><br><strong>这里面有一个TCB结构体指针,传出去的参数</strong></li></ul><h3 id="例如"><a href="#例如" class="headerlink" title="例如"></a>例如</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">testCode</span><span class="params">(<span class="type">void</span> *pvParameters)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,*pvParameters);</span><br><span class="line">        <span class="built_in">vTaskDelay</span>(<span class="number">10</span>/portTICK_PERIOD_MS); <span class="comment">//等待1s</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">xTaskCreatePinnedToCore</span>(testCode, <span class="string">&quot;test&quot;</span>, <span class="number">10000</span>, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> RTOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于cortex内核</title>
      <link href="/2024/08/05/STM32/%E5%85%B3%E4%BA%8Ecortex%E5%86%85%E6%A0%B8/%E5%85%B3%E4%BA%8Ecortex%E5%86%85%E6%A0%B8/"/>
      <url>/2024/08/05/STM32/%E5%85%B3%E4%BA%8Ecortex%E5%86%85%E6%A0%B8/%E5%85%B3%E4%BA%8Ecortex%E5%86%85%E6%A0%B8/</url>
      
        <content type="html"><![CDATA[<h1 id="Cortex-M和STM32"><a href="#Cortex-M和STM32" class="headerlink" title="Cortex-M和STM32"></a>Cortex-M和STM32</h1><h2 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h2><h3 id="STM32的外设寄存器和Cortex内核的寄存器相互独立"><a href="#STM32的外设寄存器和Cortex内核的寄存器相互独立" class="headerlink" title="STM32的外设寄存器和Cortex内核的寄存器相互独立"></a>STM32的外设寄存器和Cortex内核的寄存器相互独立</h3><p><strong><font size="4">STM32的外设寄存器就是芯片手册上的外设寄存器，如ADC,TIM等。</font></strong><br><strong><font size="4">而Cortex内核的寄存器有16+个。</font></strong><br><img src="/picture/STM32/%E5%85%B3%E4%BA%8Ecortex%E5%86%85%E6%A0%B8/1.png" class="lazyload placeholder" data-srcset="/picture/STM32/%E5%85%B3%E4%BA%8Ecortex%E5%86%85%E6%A0%B8/1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="arm寄存器"></p><blockquote><p><strong><font size="4">STM32的外设寄存器一般用于控制外部设备的状态</font></strong><br><strong><font size="4">而Cortex内核的寄存器则是用来控制运算，栈指针等</font></strong></p></blockquote><h3 id="关于r13寄存器-Cortex-M3-双堆栈指针（MSP-PSP）"><a href="#关于r13寄存器-Cortex-M3-双堆栈指针（MSP-PSP）" class="headerlink" title="关于r13寄存器(Cortex-M3 双堆栈指针（MSP&amp;PSP）)"></a>关于r13寄存器(Cortex-M3 双堆栈指针（MSP&amp;PSP）)</h3><p><strong>【双堆栈指针（MSP&amp;PSP）】</strong></p><ul><li><strong><font size="4">Cortex-M3内核中有两个堆栈指针（MSP &amp; PSP），但任何时刻只能使用到其中一个。</font></strong></li></ul><ul><li><strong><font size="4">通过SP访问到的是正在使用的那个指针，可以通过MSR&#x2F;MRS指令访问指定的堆栈指针。</font></strong></li></ul><ul><li><strong><font size="4">通过设置CONTROL寄存器的bit[1]选择使用哪个堆栈指针。CONTROL[1]&#x3D;0选择主堆栈指针；CONTROL[1]&#x3D;1选择进程堆栈指针。</font></strong></li></ul><ul><li><strong><font size="4">Handler模式下，只允许使用主堆栈指针MSP。</font></strong></li></ul><ul><li><strong><font size="4"><span class='p red'>裸机下只会使用MSP指针。</span></font></strong></li></ul><ul><li><strong><font size="4"><span class='p red'>复位后处于线程模式特权级，默认使用MSP。</span></font></strong></li></ul><h3 id="关于r14寄存器-LR"><a href="#关于r14寄存器-LR" class="headerlink" title="关于r14寄存器(LR)"></a>关于r14寄存器(LR)</h3><p><strong>【R14连接寄存器LR】</strong></p><h4 id="关于B-BL-ARM指令"><a href="#关于B-BL-ARM指令" class="headerlink" title="关于B BL ARM指令"></a>关于B BL ARM指令</h4><blockquote><p><strong><font size="4">连接寄存器LR用于在调用子程序时存储返回地址。例如，在使用BL指令时，<span class='p red'>就自动填充LR的值。</span></font></strong><br><strong><font size="4">也就是返回地址存在R14中，所以可以在子程序返回时只要<span class='p red'>MOV PC， LR</span>即可。</font></strong><br><strong><font size="4"><span class='p red'>b与bl指令的区别：</span></font></strong></p><blockquote><p><strong><font size="4"><span class='p red'>b指令：</span>不能识别(Rxx)寄存器的值，只是简单的程序跳转，跳转到到目标标号处执行。</font></strong><br><strong><font size="4"><span class='p red'>bl指令：</span>带链接程序跳转，也就是要带返回地址。在发生跳转前，将当前PC-4保存到R14中。</font></strong><br><strong><font size="4"><span class='p red'>bx指令：</span>可以识别(Rxx)寄存器的值，BX 指令会考虑到当前的处理器状态（ARM 或 Thumb）。对于 Cortex-M 处理器，BX 指令可以确保状态的正确切换（如果必要），从而保证程序的正确性。</font></strong></p></blockquote></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">main            ;主程序</span><br><span class="line">    BL        function1 ; 使用“分支并连接”指令调用function1</span><br><span class="line">                        ; PC=function1，并且LR=main的下一条指令地址</span><br><span class="line"></span><br><span class="line">function1</span><br><span class="line">    ...           ; function1的代码</span><br><span class="line">    BX LR         ; 函数返回（如果function1要使用LR，必须使用前PUSH，</span><br><span class="line">                  ; 否则返回时程序就可能跑飞了）</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> STM32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32的启动汇编解析</title>
      <link href="/2024/08/05/STM32/STM32%E7%9A%84%E5%90%AF%E5%8A%A8%E6%B1%87%E7%BC%96%E8%A7%A3%E6%9E%90/STM32%E7%9A%84%E5%90%AF%E5%8A%A8%E6%B1%87%E7%BC%96%E8%A7%A3%E6%9E%90/"/>
      <url>/2024/08/05/STM32/STM32%E7%9A%84%E5%90%AF%E5%8A%A8%E6%B1%87%E7%BC%96%E8%A7%A3%E6%9E%90/STM32%E7%9A%84%E5%90%AF%E5%8A%A8%E6%B1%87%E7%BC%96%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="startup-stm32f10x-md-s"><a href="#startup-stm32f10x-md-s" class="headerlink" title="startup_stm32f10x_md.s"></a>startup_stm32f10x_md.s</h1><h2 id="以该函数为例子"><a href="#以该函数为例子" class="headerlink" title="以该函数为例子"></a>以该函数为例子</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br></pre></td><td class="code"><pre><span class="line">;******************** (C) COPYRIGHT 2011 STMicroelectronics ********************</span><br><span class="line">;* File Name          : startup_stm32f10x_md.s</span><br><span class="line">;* Author             : MCD Application Team</span><br><span class="line">;* Version            : V3.5.0</span><br><span class="line">;* Date               : 11-March-2011</span><br><span class="line">;* Description        : STM32F10x Medium Density Devices vector table for MDK-ARM </span><br><span class="line">;*                      toolchain.  </span><br><span class="line">;*                      This module performs:</span><br><span class="line">;*                      - Set the initial SP</span><br><span class="line">;*                      - Set the initial PC == Reset_Handler</span><br><span class="line">;*                      - Set the vector table entries with the exceptions ISR address</span><br><span class="line">;*                      - Configure the clock system</span><br><span class="line">;*                      - Branches to __main in the C library (which eventually</span><br><span class="line">;*                        calls main()).</span><br><span class="line">;*                      After Reset the CortexM3 processor is in Thread mode,</span><br><span class="line">;*                      priority is Privileged, and the Stack is set to Main.</span><br><span class="line">;* &lt;&lt;&lt; Use Configuration Wizard in Context Menu &gt;&gt;&gt;   </span><br><span class="line">;*******************************************************************************</span><br><span class="line">; THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS</span><br><span class="line">; WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.</span><br><span class="line">; AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,</span><br><span class="line">; INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE</span><br><span class="line">; CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING</span><br><span class="line">; INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.</span><br><span class="line">;*******************************************************************************</span><br><span class="line"></span><br><span class="line">; Amount of memory (in bytes) allocated for Stack</span><br><span class="line">; Tailor this value to your application needs</span><br><span class="line">; &lt;h&gt; Stack Configuration</span><br><span class="line">;   &lt;o&gt; Stack Size (in Bytes) &lt;0x0-0xFFFFFFFF:8&gt;</span><br><span class="line">; &lt;/h&gt;</span><br><span class="line"></span><br><span class="line">Stack_Size      EQU     0x00000400</span><br><span class="line"></span><br><span class="line">                AREA    STACK, NOINIT, READWRITE, ALIGN=3</span><br><span class="line">Stack_Mem       SPACE   Stack_Size</span><br><span class="line">__initial_sp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">; &lt;h&gt; Heap Configuration</span><br><span class="line">;   &lt;o&gt;  Heap Size (in Bytes) &lt;0x0-0xFFFFFFFF:8&gt;</span><br><span class="line">; &lt;/h&gt;</span><br><span class="line"></span><br><span class="line">Heap_Size       EQU     0x00000200</span><br><span class="line"></span><br><span class="line">                AREA    HEAP, NOINIT, READWRITE, ALIGN=3</span><br><span class="line">__heap_base</span><br><span class="line">Heap_Mem        SPACE   Heap_Size</span><br><span class="line">__heap_limit</span><br><span class="line"></span><br><span class="line">                PRESERVE8</span><br><span class="line">                THUMB</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">; Vector Table Mapped to Address 0 at Reset</span><br><span class="line">                AREA    RESET, DATA, READONLY</span><br><span class="line">                EXPORT  __Vectors</span><br><span class="line">                EXPORT  __Vectors_End</span><br><span class="line">                EXPORT  __Vectors_Size</span><br><span class="line"></span><br><span class="line">__Vectors       DCD     __initial_sp               ; Top of Stack</span><br><span class="line">                DCD     Reset_Handler              ; Reset Handler</span><br><span class="line">                DCD     NMI_Handler                ; NMI Handler</span><br><span class="line">                DCD     HardFault_Handler          ; Hard Fault Handler</span><br><span class="line">                DCD     MemManage_Handler          ; MPU Fault Handler</span><br><span class="line">                DCD     BusFault_Handler           ; Bus Fault Handler</span><br><span class="line">                DCD     UsageFault_Handler         ; Usage Fault Handler</span><br><span class="line">                DCD     0                          ; Reserved</span><br><span class="line">                DCD     0                          ; Reserved</span><br><span class="line">                DCD     0                          ; Reserved</span><br><span class="line">                DCD     0                          ; Reserved</span><br><span class="line">                DCD     SVC_Handler                ; SVCall Handler</span><br><span class="line">                DCD     DebugMon_Handler           ; Debug Monitor Handler</span><br><span class="line">                DCD     0                          ; Reserved</span><br><span class="line">                DCD     PendSV_Handler             ; PendSV Handler</span><br><span class="line">                DCD     SysTick_Handler            ; SysTick Handler</span><br><span class="line"></span><br><span class="line">                ; External Interrupts</span><br><span class="line">                DCD     WWDG_IRQHandler            ; Window Watchdog</span><br><span class="line">                DCD     PVD_IRQHandler             ; PVD through EXTI Line detect</span><br><span class="line">                DCD     TAMPER_IRQHandler          ; Tamper</span><br><span class="line">                DCD     RTC_IRQHandler             ; RTC</span><br><span class="line">                DCD     FLASH_IRQHandler           ; Flash</span><br><span class="line">                DCD     RCC_IRQHandler             ; RCC</span><br><span class="line">                DCD     EXTI0_IRQHandler           ; EXTI Line 0</span><br><span class="line">                DCD     EXTI1_IRQHandler           ; EXTI Line 1</span><br><span class="line">                DCD     EXTI2_IRQHandler           ; EXTI Line 2</span><br><span class="line">                DCD     EXTI3_IRQHandler           ; EXTI Line 3</span><br><span class="line">                DCD     EXTI4_IRQHandler           ; EXTI Line 4</span><br><span class="line">                DCD     DMA1_Channel1_IRQHandler   ; DMA1 Channel 1</span><br><span class="line">                DCD     DMA1_Channel2_IRQHandler   ; DMA1 Channel 2</span><br><span class="line">                DCD     DMA1_Channel3_IRQHandler   ; DMA1 Channel 3</span><br><span class="line">                DCD     DMA1_Channel4_IRQHandler   ; DMA1 Channel 4</span><br><span class="line">                DCD     DMA1_Channel5_IRQHandler   ; DMA1 Channel 5</span><br><span class="line">                DCD     DMA1_Channel6_IRQHandler   ; DMA1 Channel 6</span><br><span class="line">                DCD     DMA1_Channel7_IRQHandler   ; DMA1 Channel 7</span><br><span class="line">                DCD     ADC1_2_IRQHandler          ; ADC1_2</span><br><span class="line">                DCD     USB_HP_CAN1_TX_IRQHandler  ; USB High Priority or CAN1 TX</span><br><span class="line">                DCD     USB_LP_CAN1_RX0_IRQHandler ; USB Low  Priority or CAN1 RX0</span><br><span class="line">                DCD     CAN1_RX1_IRQHandler        ; CAN1 RX1</span><br><span class="line">                DCD     CAN1_SCE_IRQHandler        ; CAN1 SCE</span><br><span class="line">                DCD     EXTI9_5_IRQHandler         ; EXTI Line 9..5</span><br><span class="line">                DCD     TIM1_BRK_IRQHandler        ; TIM1 Break</span><br><span class="line">                DCD     TIM1_UP_IRQHandler         ; TIM1 Update</span><br><span class="line">                DCD     TIM1_TRG_COM_IRQHandler    ; TIM1 Trigger and Commutation</span><br><span class="line">                DCD     TIM1_CC_IRQHandler         ; TIM1 Capture Compare</span><br><span class="line">                DCD     TIM2_IRQHandler            ; TIM2</span><br><span class="line">                DCD     TIM3_IRQHandler            ; TIM3</span><br><span class="line">                DCD     TIM4_IRQHandler            ; TIM4</span><br><span class="line">                DCD     I2C1_EV_IRQHandler         ; I2C1 Event</span><br><span class="line">                DCD     I2C1_ER_IRQHandler         ; I2C1 Error</span><br><span class="line">                DCD     I2C2_EV_IRQHandler         ; I2C2 Event</span><br><span class="line">                DCD     I2C2_ER_IRQHandler         ; I2C2 Error</span><br><span class="line">                DCD     SPI1_IRQHandler            ; SPI1</span><br><span class="line">                DCD     SPI2_IRQHandler            ; SPI2</span><br><span class="line">                DCD     USART1_IRQHandler          ; USART1</span><br><span class="line">                DCD     USART2_IRQHandler          ; USART2</span><br><span class="line">                DCD     USART3_IRQHandler          ; USART3</span><br><span class="line">                DCD     EXTI15_10_IRQHandler       ; EXTI Line 15..10</span><br><span class="line">                DCD     RTCAlarm_IRQHandler        ; RTC Alarm through EXTI Line</span><br><span class="line">                DCD     USBWakeUp_IRQHandler       ; USB Wakeup from suspend</span><br><span class="line">__Vectors_End</span><br><span class="line"></span><br><span class="line">__Vectors_Size  EQU  __Vectors_End - __Vectors</span><br><span class="line"></span><br><span class="line">                AREA    |.text|, CODE, READONLY</span><br><span class="line"></span><br><span class="line">; Reset handler</span><br><span class="line">Reset_Handler    PROC</span><br><span class="line">                 EXPORT  Reset_Handler             [WEAK]</span><br><span class="line">     IMPORT  __main</span><br><span class="line">     IMPORT  SystemInit</span><br><span class="line">                 LDR     R0, =SystemInit</span><br><span class="line">                 BLX     R0</span><br><span class="line">                 LDR     R0, =__main</span><br><span class="line">                 BX      R0</span><br><span class="line">                 ENDP</span><br><span class="line"></span><br><span class="line">; Dummy Exception Handlers (infinite loops which can be modified)</span><br><span class="line"></span><br><span class="line">NMI_Handler     PROC</span><br><span class="line">                EXPORT  NMI_Handler                [WEAK]</span><br><span class="line">                B       .</span><br><span class="line">                ENDP</span><br><span class="line">HardFault_Handler\</span><br><span class="line">                PROCS</span><br><span class="line">                EXPORT  HardFault_Handler          [WEAK]</span><br><span class="line">                B       .</span><br><span class="line">                ENDP</span><br><span class="line">MemManage_Handler\</span><br><span class="line">                PROC</span><br><span class="line">                EXPORT  MemManage_Handler          [WEAK]</span><br><span class="line">                B       .</span><br><span class="line">                ENDP</span><br><span class="line">BusFault_Handler\</span><br><span class="line">                PROC</span><br><span class="line">                EXPORT  BusFault_Handler           [WEAK]</span><br><span class="line">                B       .</span><br><span class="line">                ENDP</span><br><span class="line">UsageFault_Handler\</span><br><span class="line">                PROC</span><br><span class="line">                EXPORT  UsageFault_Handler         [WEAK]</span><br><span class="line">                B       .</span><br><span class="line">                ENDP</span><br><span class="line">SVC_Handler     PROC</span><br><span class="line">                EXPORT  SVC_Handler                [WEAK]</span><br><span class="line">                B       .</span><br><span class="line">                ENDP</span><br><span class="line">DebugMon_Handler\</span><br><span class="line">                PROC</span><br><span class="line">                EXPORT  DebugMon_Handler           [WEAK]</span><br><span class="line">                B       .</span><br><span class="line">                ENDP</span><br><span class="line">PendSV_Handler  PROC</span><br><span class="line">                EXPORT  PendSV_Handler             [WEAK]</span><br><span class="line">                B       .</span><br><span class="line">                ENDP</span><br><span class="line">SysTick_Handler PROC</span><br><span class="line">                EXPORT  SysTick_Handler            [WEAK]</span><br><span class="line">                B       .</span><br><span class="line">                ENDP</span><br><span class="line"></span><br><span class="line">Default_Handler PROC</span><br><span class="line"></span><br><span class="line">                EXPORT  WWDG_IRQHandler            [WEAK]</span><br><span class="line">                EXPORT  PVD_IRQHandler             [WEAK]</span><br><span class="line">                EXPORT  TAMPER_IRQHandler          [WEAK]</span><br><span class="line">                EXPORT  RTC_IRQHandler             [WEAK]</span><br><span class="line">                EXPORT  FLASH_IRQHandler           [WEAK]</span><br><span class="line">                EXPORT  RCC_IRQHandler             [WEAK]</span><br><span class="line">                EXPORT  EXTI0_IRQHandler           [WEAK]</span><br><span class="line">                EXPORT  EXTI1_IRQHandler           [WEAK]</span><br><span class="line">                EXPORT  EXTI2_IRQHandler           [WEAK]</span><br><span class="line">                EXPORT  EXTI3_IRQHandler           [WEAK]</span><br><span class="line">                EXPORT  EXTI4_IRQHandler           [WEAK]</span><br><span class="line">                EXPORT  DMA1_Channel1_IRQHandler   [WEAK]</span><br><span class="line">                EXPORT  DMA1_Channel2_IRQHandler   [WEAK]</span><br><span class="line">                EXPORT  DMA1_Channel3_IRQHandler   [WEAK]</span><br><span class="line">                EXPORT  DMA1_Channel4_IRQHandler   [WEAK]</span><br><span class="line">                EXPORT  DMA1_Channel5_IRQHandler   [WEAK]</span><br><span class="line">                EXPORT  DMA1_Channel6_IRQHandler   [WEAK]</span><br><span class="line">                EXPORT  DMA1_Channel7_IRQHandler   [WEAK]</span><br><span class="line">                EXPORT  ADC1_2_IRQHandler          [WEAK]</span><br><span class="line">                EXPORT  USB_HP_CAN1_TX_IRQHandler  [WEAK]</span><br><span class="line">                EXPORT  USB_LP_CAN1_RX0_IRQHandler [WEAK]</span><br><span class="line">                EXPORT  CAN1_RX1_IRQHandler        [WEAK]</span><br><span class="line">                EXPORT  CAN1_SCE_IRQHandler        [WEAK]</span><br><span class="line">                EXPORT  EXTI9_5_IRQHandler         [WEAK]</span><br><span class="line">                EXPORT  TIM1_BRK_IRQHandler        [WEAK]</span><br><span class="line">                EXPORT  TIM1_UP_IRQHandler         [WEAK]</span><br><span class="line">                EXPORT  TIM1_TRG_COM_IRQHandler    [WEAK]</span><br><span class="line">                EXPORT  TIM1_CC_IRQHandler         [WEAK]</span><br><span class="line">                EXPORT  TIM2_IRQHandler            [WEAK]</span><br><span class="line">                EXPORT  TIM3_IRQHandler            [WEAK]</span><br><span class="line">                EXPORT  TIM4_IRQHandler            [WEAK]</span><br><span class="line">                EXPORT  I2C1_EV_IRQHandler         [WEAK]</span><br><span class="line">                EXPORT  I2C1_ER_IRQHandler         [WEAK]</span><br><span class="line">                EXPORT  I2C2_EV_IRQHandler         [WEAK]</span><br><span class="line">                EXPORT  I2C2_ER_IRQHandler         [WEAK]</span><br><span class="line">                EXPORT  SPI1_IRQHandler            [WEAK]</span><br><span class="line">                EXPORT  SPI2_IRQHandler            [WEAK]</span><br><span class="line">                EXPORT  USART1_IRQHandler          [WEAK]</span><br><span class="line">                EXPORT  USART2_IRQHandler          [WEAK]</span><br><span class="line">                EXPORT  USART3_IRQHandler          [WEAK]</span><br><span class="line">                EXPORT  EXTI15_10_IRQHandler       [WEAK]</span><br><span class="line">                EXPORT  RTCAlarm_IRQHandler        [WEAK]</span><br><span class="line">                EXPORT  USBWakeUp_IRQHandler       [WEAK]</span><br><span class="line"></span><br><span class="line">WWDG_IRQHandler</span><br><span class="line">PVD_IRQHandler</span><br><span class="line">TAMPER_IRQHandler</span><br><span class="line">RTC_IRQHandler</span><br><span class="line">FLASH_IRQHandler</span><br><span class="line">RCC_IRQHandler</span><br><span class="line">EXTI0_IRQHandler</span><br><span class="line">EXTI1_IRQHandler</span><br><span class="line">EXTI2_IRQHandler</span><br><span class="line">EXTI3_IRQHandler</span><br><span class="line">EXTI4_IRQHandler</span><br><span class="line">DMA1_Channel1_IRQHandler</span><br><span class="line">DMA1_Channel2_IRQHandler</span><br><span class="line">DMA1_Channel3_IRQHandler</span><br><span class="line">DMA1_Channel4_IRQHandler</span><br><span class="line">DMA1_Channel5_IRQHandler</span><br><span class="line">DMA1_Channel6_IRQHandler</span><br><span class="line">DMA1_Channel7_IRQHandler</span><br><span class="line">ADC1_2_IRQHandler</span><br><span class="line">USB_HP_CAN1_TX_IRQHandler</span><br><span class="line">USB_LP_CAN1_RX0_IRQHandler</span><br><span class="line">CAN1_RX1_IRQHandler</span><br><span class="line">CAN1_SCE_IRQHandler</span><br><span class="line">EXTI9_5_IRQHandler</span><br><span class="line">TIM1_BRK_IRQHandler</span><br><span class="line">TIM1_UP_IRQHandler</span><br><span class="line">TIM1_TRG_COM_IRQHandler</span><br><span class="line">TIM1_CC_IRQHandler</span><br><span class="line">TIM2_IRQHandler</span><br><span class="line">TIM3_IRQHandler</span><br><span class="line">TIM4_IRQHandler</span><br><span class="line">I2C1_EV_IRQHandler</span><br><span class="line">I2C1_ER_IRQHandler</span><br><span class="line">I2C2_EV_IRQHandler</span><br><span class="line">I2C2_ER_IRQHandler</span><br><span class="line">SPI1_IRQHandler</span><br><span class="line">SPI2_IRQHandler</span><br><span class="line">USART1_IRQHandler</span><br><span class="line">USART2_IRQHandler</span><br><span class="line">USART3_IRQHandler</span><br><span class="line">EXTI15_10_IRQHandler</span><br><span class="line">RTCAlarm_IRQHandler</span><br><span class="line">USBWakeUp_IRQHandler</span><br><span class="line"></span><br><span class="line">                B       .</span><br><span class="line"></span><br><span class="line">                ENDP</span><br><span class="line"></span><br><span class="line">                ALIGN</span><br><span class="line"></span><br><span class="line">;*******************************************************************************</span><br><span class="line">; User Stack and Heap initialization</span><br><span class="line">;*******************************************************************************</span><br><span class="line">                 IF      :DEF:__MICROLIB           </span><br><span class="line">                </span><br><span class="line">                 EXPORT  __initial_sp</span><br><span class="line">                 EXPORT  __heap_base</span><br><span class="line">                 EXPORT  __heap_limit</span><br><span class="line">                </span><br><span class="line">                 ELSE</span><br><span class="line">                </span><br><span class="line">                 IMPORT  __use_two_region_memory</span><br><span class="line">                 EXPORT  __user_initial_stackheap</span><br><span class="line">                 </span><br><span class="line">__user_initial_stackheap</span><br><span class="line"></span><br><span class="line">                 LDR     R0, =  Heap_Mem</span><br><span class="line">                 LDR     R1, =(Stack_Mem + Stack_Size)</span><br><span class="line">                 LDR     R2, = (Heap_Mem +  Heap_Size)</span><br><span class="line">                 LDR     R3, = Stack_Mem</span><br><span class="line">                 BX      LR</span><br><span class="line"></span><br><span class="line">                 ALIGN</span><br><span class="line"></span><br><span class="line">                 ENDIF</span><br><span class="line"></span><br><span class="line">                 END</span><br><span class="line"></span><br><span class="line">;******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE*****</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> STM32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于FATFS</title>
      <link href="/2024/08/02/STM32/FATFS%E7%9B%B8%E5%85%B3/%E5%85%B3%E4%BA%8EFATFS/"/>
      <url>/2024/08/02/STM32/FATFS%E7%9B%B8%E5%85%B3/%E5%85%B3%E4%BA%8EFATFS/</url>
      
        <content type="html"><![CDATA[<h1 id="关于FATFS"><a href="#关于FATFS" class="headerlink" title="关于FATFS"></a>关于FATFS</h1><h2 id="扇区数量"><a href="#扇区数量" class="headerlink" title="扇区数量"></a>扇区数量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DRESULT disk_read (</span><br><span class="line">BYTE pdrv,/* Physical drive nmuber to identify the drive */</span><br><span class="line">BYTE *buff,/* Data buffer to store <span class="built_in">read</span> data */</span><br><span class="line">LBA_t sector,/* Start sector <span class="keyword">in</span> LBA */</span><br><span class="line">UINT count/* Number of sectors to <span class="built_in">read</span> */</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="在disk-read函数里-LBA-t-sector代表的是63个LBA的初始化表，数量也为63"><a href="#在disk-read函数里-LBA-t-sector代表的是63个LBA的初始化表，数量也为63" class="headerlink" title="在disk_read函数里,LBA_t sector代表的是63个LBA的初始化表，数量也为63"></a><strong><font size="4">在disk_read函数里,LBA_t sector代表的是63个LBA的初始化表，数量也为63</font></strong></h3><blockquote><p><strong><font size="4">其中LBA 0是512B的大小，是存储信息</font></strong><br><strong><font size="4">其中LBA 1-62是保留区，里面的内容无效</font></strong><br><strong><font size="4">第sector 63则是开始代码</font></strong></p></blockquote><h3 id="在disk-ioctl函数里-设置的扇区数量不能低于-128-63-个，否则f-mkfs将会失败"><a href="#在disk-ioctl函数里-设置的扇区数量不能低于-128-63-个，否则f-mkfs将会失败" class="headerlink" title="在disk_ioctl函数里,设置的扇区数量不能低于(128 + 63)个，否则f_mkfs将会失败"></a><strong><font size="4">在disk_ioctl函数里,设置的扇区数量不能低于(128 + 63)个，否则f_mkfs将会失败</font></strong></h3><blockquote><p><strong><font size="4">在不同的fatfs中，最小的扇区数量也不同</font></strong><br><strong><font size="4">如fatfs0.15中不能低于(128 + 63)个，而fatfs0.11中不能低于128个扇区</font></strong></p></blockquote><h2 id="f-mkfs-格式化扇区"><a href="#f-mkfs-格式化扇区" class="headerlink" title="f_mkfs()格式化扇区"></a>f_mkfs()格式化扇区</h2><h3 id="FATFS无法选择格式化的类型，只能由卷的参数决定"><a href="#FATFS无法选择格式化的类型，只能由卷的参数决定" class="headerlink" title="FATFS无法选择格式化的类型，只能由卷的参数决定"></a><strong><font size="4">FATFS无法选择格式化的类型，只能由卷的参数决定</font></strong></h3><blockquote><p><strong><font size="4">根据Microsoft发布的FAT规范，除exFAT之外的FAT子类型FAT12&#x2F;FAT16&#x2F;FAT32仅由卷上的集群数量决定，而不是其他。</font></strong><br><strong><font size="4">因此，所创建卷的FAT子类型取决于卷大小和集群大小。</font></strong><br><strong><font size="4">如果由参数指定的FAT类型和簇大小的组合对卷大小无效，则该函数将通过FR_MKFS_ABORTED失败。</font></strong><br><strong><font size="4"> </font></strong><br><strong><font size="4">在fatfs0.15中当低于(128+63)个扇区时，f_mkfs会返回14</font></strong><br>​ <strong><font size="4">在fatfs0.11中当低于128个扇区时，f_mkfs会返回-1</font></strong><br><strong><font size="4">两个版本的fatfs中stm32f103zet6初始化均为FAT12</font></strong></p></blockquote><h3 id="如何查看初始化为什么类型"><a href="#如何查看初始化为什么类型" class="headerlink" title="如何查看初始化为什么类型"></a><strong><font size="4">如何查看初始化为什么类型</font></strong></h3><blockquote><p><strong><font size="4">进入f_mkfs()内部</font></strong><br><strong><font size="4">使用CTRL + F搜寻下面的代码赋值式，再串口输出可以看到初始化为什么状态</font></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sys =</span><br></pre></td></tr></table></figure></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> STM32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多目录下CMakeLists写法</title>
      <link href="/2024/07/31/VSCode/C_Cpp/%E5%A4%9A%E7%9B%AE%E5%BD%95%E4%B8%8BCMakeLists%E5%86%99%E6%B3%95/"/>
      <url>/2024/07/31/VSCode/C_Cpp/%E5%A4%9A%E7%9B%AE%E5%BD%95%E4%B8%8BCMakeLists%E5%86%99%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="多目录下CMakeLists写法"><a href="#多目录下CMakeLists写法" class="headerlink" title="多目录下CMakeLists写法"></a>多目录下CMakeLists写法</h1><h2 id="CMake目录如下图-标准写法"><a href="#CMake目录如下图-标准写法" class="headerlink" title="CMake目录如下图(标准写法)"></a>CMake目录如下图(标准写法)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- user_project/ - CMakelists.txt</span><br><span class="line">                - bin</span><br><span class="line">                - build/</span><br><span class="line">                - src/      - test.cpp</span><br><span class="line">                            - CMakelists.txt</span><br><span class="line">                - include/  - test.h     </span><br><span class="line">                - main.cpp  </span><br></pre></td></tr></table></figure><h2 id="user-project-CMakelists-txt-父目录-下的写法"><a href="#user-project-CMakelists-txt-父目录-下的写法" class="headerlink" title="user_project&#x2F; - CMakelists.txt(父目录)下的写法"></a>user_project&#x2F; - CMakelists.txt(父目录)下的写法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cmake_minimum_required (VERSION 2.8)</span><br><span class="line"> </span><br><span class="line">project(FATFS)</span><br><span class="line"> </span><br><span class="line">add_subdirectory(src <span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span>/**/src_build) <span class="comment">#第一个参数指定根目录下的文件夹，第二个参数指定输出的文件夹</span></span><br><span class="line"> </span><br><span class="line">include_directories(<span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span>/include) <span class="comment">#包含.h文件的文件夹</span></span><br><span class="line"></span><br><span class="line">add_executable(FATFS main.cpp) <span class="comment">#生成可执行文件，用法和add_library差不多</span></span><br><span class="line"></span><br><span class="line">target_link_libraries(FATFS src) <span class="comment">#链接库文件</span></span><br><span class="line"></span><br><span class="line">SET(EXECUTABLE_OUTPUT_PATH <span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span>/**/) <span class="comment">#指定可执行文件输出的文件夹</span></span><br><span class="line">SET(LIBRARY_OUTPUT_PATH    <span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span>/**/lib) <span class="comment">#指定库文件输出的文件夹</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="src-CMakelists-txt-子目录-下的写法"><a href="#src-CMakelists-txt-子目录-下的写法" class="headerlink" title="- src&#x2F;  - CMakelists.txt(子目录)下的写法"></a>- src&#x2F;  - CMakelists.txt(子目录)下的写法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cmake_minimum_required (VERSION 2.8)</span><br><span class="line"> </span><br><span class="line">project(src)</span><br><span class="line"></span><br><span class="line">aux_source_directory (. SOURCES)</span><br><span class="line"></span><br><span class="line">add_library(src test.cpp)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CMakeList的常用语法</title>
      <link href="/2024/07/31/VSCode/C_Cpp/CMakeLists%E7%94%A8%E6%B3%95/"/>
      <url>/2024/07/31/VSCode/C_Cpp/CMakeLists%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="CMakeLists-txt常用语法"><a href="#CMakeLists-txt常用语法" class="headerlink" title="CMakeLists.txt常用语法"></a>CMakeLists.txt常用语法</h1><h2 id="aux-source-directory"><a href="#aux-source-directory" class="headerlink" title="aux_source_directory( )"></a>aux_source_directory(<span class='p red'>dir</span> <span class='p blue'>variable</span>)</h2><ul><li><strong><font size="4">收集指定dir文件中所有源文件的名称，并将这些名称存储在提供的<variable>中</font></strong> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">aux_source_directory(<span class="built_in">source</span> var)</span><br><span class="line">message(<span class="string">&quot;var: <span class="variable">$&#123;var&#125;</span>&quot;</span>) <span class="comment"># var: source/add.cpp;source/multipy.cpp;source/subtraction.cpp</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 注意:下面的var会包含source和samples的文件,而不仅仅是只有samples中的</span></span><br><span class="line">aux_source_directory(samples var)</span><br><span class="line">message(<span class="string">&quot;var: <span class="variable">$&#123;var&#125;</span>&quot;</span>) <span class="comment"># var: source/add.cpp;source/multipy.cpp;source/subtraction.cpp;samples/sample_add.cpp;samples/sample_multipy.cpp;samples/sample_subtraction.cpp</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 注意:虽然include目录中不存在源文件,但是var的值并不为空,它保留了之前已存在的结果</span></span><br><span class="line">aux_source_directory(include var)</span><br><span class="line">message(<span class="string">&quot;var: <span class="variable">$&#123;var&#125;</span>&quot;</span>) <span class="comment"># var: source/add.cpp;source/multipy.cpp;source/subtraction.cpp;samples/sample_add.cpp;samples/sample_multipy.cpp;samples/sample_subtraction.cpp</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">unset</span>(var)</span><br><span class="line">aux_source_directory(samples var)</span><br><span class="line">message(<span class="string">&quot;var: <span class="variable">$&#123;var&#125;</span>&quot;</span>) <span class="comment"># var: samples/sample_add.cpp;samples/sample_multipy.cpp;samples/sample_subtraction.cpp</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="set"><a href="#set" class="headerlink" title="set( )"></a>set(<span class='p red'>SRC_LIST</span> <span class='p blue'>xxx.c</span>)</h2><ul><li><strong><font size="4">将后面的.c文件存储到SRC_LIST中</font></strong> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">SET(VAR [VALUE] [CACHE TYPE DOCSTRING [FORCE]])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方式1: 各个源文件之间使用空格间隔</span></span><br><span class="line"><span class="built_in">set</span>(SRC_LIST add.c  div.c   main.c  mult.c  sub.c)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方式2: 各个源文件之间使用;间隔</span></span><br><span class="line"><span class="built_in">set</span>(SRC_LIST add.c;div.c;main.c;mult.c;sub.c)</span><br><span class="line"></span><br><span class="line">add_executable(app  <span class="variable">$&#123;SRC_LIST&#125;</span>)</span><br></pre></td></tr></table></figure></li></ul><h2 id="include-directories"><a href="#include-directories" class="headerlink" title="include_directories()"></a>include_directories(<span class='p red'>./dir0 ./dir1</span>)</h2><ul><li><strong><font size="4">他的作用是 自动去dir目录下寻找头文件</font></strong> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include_directories(./xxx0 ./xxx1)</span><br></pre></td></tr></table></figure></li></ul><h2 id="设置输出路径"><a href="#设置输出路径" class="headerlink" title="设置输出路径"></a>设置输出路径</h2><ul><li><strong><font size="4">设置可执行文件的输出目录</font></strong> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SET(EXECUTABLE_OUTPUT_PATH <span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span>/../bin) </span><br></pre></td></tr></table></figure><blockquote><p><strong><font size="4">在<span class='p red'>Win + VS</span>环境下,会自动在你所设置的目录后面扩展一层 <CONFIG> 目录,所以最终生成的Debug版本程序会在 ${PROJECT_SOURCE_DIR}&#x2F;..&#x2F;bin&#x2F;Debug 目录下,Release版本程序会在 ${PROJECT_SOURCE_DIR}&#x2F;..&#x2F;bin&#x2F;Release 目录下</font></strong> </p><p><strong><font size="4">在<span class='p blue'>Linux + GCC</span>环境下,无论是Debug还是Release,生成的可执行程序会直接放在你所设置的目录下,不会有差异</font></strong></p></blockquote></li></ul><ul><li><strong><font size="4">设置库文件的输出目录</font></strong> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SET(LIBRARY_OUTPUT_PATH <span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span>/../lib) </span><br></pre></td></tr></table></figure><blockquote><p><strong><font size="4">在<span class='p red'>Win + VS</span>环境下,会自动在你所设置的目录后面扩展一层 <CONFIG> 目录,所以最终生成的Debug版本库会在 ${PROJECT_SOURCE_DIR}&#x2F;..&#x2F;lib&#x2F;Debug 目录下,Release版本库会在 ${PROJECT_SOURCE_DIR}&#x2F;..&#x2F;lib&#x2F;Release 目录下</font></strong> </p><p><strong><font size="4">在<span class='p blue'>Linux + GCC</span>环境下,无论是Debug还是Release,生成的库文件会直接放在你所设置的目录下,不会有差异.</font></strong></p></blockquote></li></ul><ul><li><strong><font size="4">设置Debug版本和Release版本可执行文件的输出目录</font></strong> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span>(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG   <span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span>/../bin)    </span><br><span class="line"><span class="built_in">set</span>(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE <span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span>/../bin) </span><br></pre></td></tr></table></figure><blockquote><p><strong><font size="4">设置上面的属性,在任何环境下生成的可执行文件都将直接放在你所设置的目录.</font></strong></p></blockquote></li></ul><ul><li><strong><font size="4">设置Debug版本和Release版本库文件的输出目录</font></strong> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span>(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG <span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span>/../lib)    </span><br><span class="line"><span class="built_in">set</span>(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE <span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span>/../lib) </span><br></pre></td></tr></table></figure><blockquote><p><strong><font size="4">设置上面的属性,在任何环境下生成的可执行文件都将直接放在你所设置的目录.</font></strong></p></blockquote></li></ul><ul><li><strong><font size="4">设置了Debug版本和Release版本下库文件的后缀名</font></strong> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span>(CMAKE_DEBUG_POSTFIX <span class="string">&quot;_d&quot;</span>)    </span><br><span class="line"><span class="built_in">set</span>(CMAKE_RELEASE_POSTFIX <span class="string">&quot;_r&quot;</span>) </span><br></pre></td></tr></table></figure></li></ul><ul><li><strong><font size="4">设置Debug版本和Release版本下可执行文件的后缀名.</font></strong> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set_target_properties(<span class="variable">$&#123;TARGET_NAME&#125;</span> PROPERTIES DEBUG_POSTFIX <span class="string">&quot;_d&quot;</span>)     </span><br><span class="line">set_target_properties(<span class="variable">$&#123;TARGET_NAME&#125;</span> PROPERTIES RELEASE_POSTFIX <span class="string">&quot;_r&quot;</span>) </span><br></pre></td></tr></table></figure></li></ul><h2 id="add-library-和add-executable"><a href="#add-library-和add-executable" class="headerlink" title="add_library()和add_executable()"></a>add_library()和add_executable()</h2><ul><li><p><strong><font size="4">add_executable 用于创建一个可执行文件。当你希望编译一些源文件以生成一个可以直接运行的应用程序时，你会使用这个命令。</font></strong> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add_executable(myapp app.cpp)</span><br></pre></td></tr></table></figure><blockquote><p> <strong><font size="4">a可执行文件的输出依赖于操作系统，例如在 Unix 上通常是 .out 文件，而在 Windows 上则是 .exe 文件。</font></strong> </p></blockquote></li><li><p><strong><font size="4">add_library 是 CMake 构建系统中用于创建项目内库的核心命令。这个命令允许你指定库的源文件并定义其类型。该</font></strong> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add_library(&lt;name&gt; [STATIC | SHARED | MODULE] [EXCLUDE_FROM_ALL] [source1] [source2] [...])</span><br></pre></td></tr></table></figure><blockquote><p><strong><font size="4">两者的主要区别在于最终产物的用途：add_executable 生成的可执行文件直接运行，而 add_library 生成的库则被其他目标所链接。此外，可执行文件和库在构建过程中的处理方式可能会有所不同，因为它们可能会被不同的项目或最终用户以不同的方式使用。</font></strong> </p></blockquote></li><li><p><strong><font size="4">当你想要生成dll时，需要在使用SHARED参数</font></strong> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add_library(&lt;name&gt; SHARED [EXCLUDE_FROM_ALL] [source1] [source2] [...])</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode配置c文件的运行2_CMake</title>
      <link href="/2024/07/30/VSCode/C_Cpp/vscode%E9%85%8D%E7%BD%AEc%E6%96%87%E4%BB%B6%E7%9A%84%E8%BF%90%E8%A1%8C2_CMake/"/>
      <url>/2024/07/30/VSCode/C_Cpp/vscode%E9%85%8D%E7%BD%AEc%E6%96%87%E4%BB%B6%E7%9A%84%E8%BF%90%E8%A1%8C2_CMake/</url>
      
        <content type="html"><![CDATA[<h1 id="VSCode需要的扩展包"><a href="#VSCode需要的扩展包" class="headerlink" title="VSCode需要的扩展包"></a>VSCode需要的扩展包</h1><blockquote><p><strong><font size="5">1.C&#x2F;C++</font></strong><br><strong><font size="5">2.C&#x2F;C++ Extension Pack</font></strong><br><strong><font size="5">3.C&#x2F;C++ Themes</font></strong><br><strong><font size="5">4.Chinese(Simplifled)(简体中文)</font></strong><br><strong><font size="5">5.CMake</font></strong><br><strong><font size="5">6.CMake Tools</font></strong> </p></blockquote><h1 id="windows系统需要的环境变量"><a href="#windows系统需要的环境变量" class="headerlink" title="windows系统需要的环境变量"></a>windows系统需要的环境变量</h1><h2 id="ninja环境"><a href="#ninja环境" class="headerlink" title="ninja环境"></a>ninja环境</h2><blockquote><p><strong><font size="5">1.下载ninja.exe,点击右侧的release</font></strong> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/ninja-build/ninja</span><br></pre></td></tr></table></figure><p><strong><font size="5">2.将ninja.exe文件放入自行创建的文件夹，将该文件夹添加到系统环境变量或者用户变量的PATH路径中</font></strong> </p></blockquote><h2 id="makefile环境"><a href="#makefile环境" class="headerlink" title="makefile环境"></a>makefile环境</h2><blockquote><p><strong><font size="5">3.下载MinGW64文件</font></strong><br><strong><font size="5">4.将MinGW64文件下的bin目录添加到系统环境变量或者用户变量的PATH路径中</font></strong><br><strong><font size="5">5.系统环境变量，对所有用户起作用,而用户环境变量只对当前用户起作用。 </font></strong> </p></blockquote><h1 id="VSCode中cmake的使用"><a href="#VSCode中cmake的使用" class="headerlink" title="VSCode中cmake的使用"></a>VSCode中cmake的使用</h1><h2 id="在根目录创建CMakeLists-txt"><a href="#在根目录创建CMakeLists-txt" class="headerlink" title="在根目录创建CMakeLists.txt"></a>在根目录创建CMakeLists.txt</h2><ul><li><strong><font size="5">例子</font></strong> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cmake_minimum_required (VERSION 2.8)</span><br><span class="line"> </span><br><span class="line">project (FATFS)</span><br><span class="line"> </span><br><span class="line">include_directories(.)</span><br><span class="line"></span><br><span class="line">aux_source_directory(. var)</span><br><span class="line">add_executable(<span class="variable">$&#123;PROJECT_NAME&#125;</span>  <span class="variable">$&#123;var&#125;</span>)</span><br></pre></td></tr></table></figure><blockquote><p><strong><font size="5">用法可看文章CMakeLists.txt用法 </font></strong></p></blockquote></li></ul><h2 id="Linux下"><a href="#Linux下" class="headerlink" title="Linux下"></a>Linux下</h2><p>在根目录创建build文件夹</p><blockquote><p><strong><font size="5">在终端输入指令 </font></strong> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cmake ..</span><br><span class="line">make</span><br></pre></td></tr></table></figure></blockquote><h2 id="Windows下"><a href="#Windows下" class="headerlink" title="Windows下"></a>Windows下</h2><p>在根目录创建build文件夹</p><h3 id="makefile类"><a href="#makefile类" class="headerlink" title="makefile类"></a>makefile类</h3><blockquote><p><strong><font size="5">在终端输入指令，创建makefile </font></strong> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> MinGW_Build</span><br><span class="line"><span class="built_in">cd</span> MinGW_Build</span><br><span class="line">cmake -S ../ -B ./ -G <span class="string">&quot;MinGW Makefiles&quot;</span></span><br></pre></td></tr></table></figure><p><strong><font size="5">生成exe可执行文件 </font></strong> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#二选一</span></span><br><span class="line">mingw32-make</span><br><span class="line">cmake --build ./ <span class="comment">#cmake --build是参数，./是代表编译哪个目录下的文件</span></span><br></pre></td></tr></table></figure></blockquote><h3 id="ninja类"><a href="#ninja类" class="headerlink" title="ninja类"></a>ninja类</h3><blockquote><p><strong><font size="5">在终端输入指令，创建makefile </font></strong> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> Ninja_Build</span><br><span class="line"><span class="built_in">cd</span> Ninja_Build</span><br><span class="line">cmake -S ../ -B ./ -G <span class="string">&quot;Ninja&quot;</span></span><br></pre></td></tr></table></figure><p><strong><font size="5">生成exe可执行文件 </font></strong> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#二选一</span></span><br><span class="line">ninja</span><br><span class="line">cmake --build ./ <span class="comment">#cmake --build是参数，./是代表编译哪个目录下的文件</span></span><br></pre></td></tr></table></figure></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode配置c文件的运行1_json(不推荐)</title>
      <link href="/2024/07/30/VSCode/C_Cpp/vscode%E9%85%8D%E7%BD%AEc%E6%96%87%E4%BB%B6%E7%9A%84%E8%BF%90%E8%A1%8C1_json(%E4%B8%8D%E6%8E%A8%E8%8D%90)/"/>
      <url>/2024/07/30/VSCode/C_Cpp/vscode%E9%85%8D%E7%BD%AEc%E6%96%87%E4%BB%B6%E7%9A%84%E8%BF%90%E8%A1%8C1_json(%E4%B8%8D%E6%8E%A8%E8%8D%90)/</url>
      
        <content type="html"><![CDATA[<h1 id="VSCode需要的扩展包"><a href="#VSCode需要的扩展包" class="headerlink" title="VSCode需要的扩展包"></a>VSCode需要的扩展包</h1><blockquote><p><strong><font size="5">1.C&#x2F;C++</font></strong><br><strong><font size="5">2.C&#x2F;C++ Extension Pack</font></strong><br><strong><font size="5">3.C&#x2F;C++ Themes</font></strong><br><strong><font size="5">4.Chinese(Simplifled)(简体中文)</font></strong><br><strong><font size="5">5.Code Runner</font></strong> </p></blockquote><h1 id="windows系统需要的环境变量"><a href="#windows系统需要的环境变量" class="headerlink" title="windows系统需要的环境变量"></a>windows系统需要的环境变量</h1><blockquote><p><strong><font size="5">1.下载MinGW64文件</font></strong><br><strong><font size="5">2.将MinGW64文件下的bin目录添加到系统环境变量或者用户变量的PATH路径中</font></strong><br><strong><font size="5">3.系统环境变量，对所有用户起作用,而用户环境变量只对当前用户起作用。 </font></strong> </p></blockquote><h1 id="VSCode需要的配置"><a href="#VSCode需要的配置" class="headerlink" title="VSCode需要的配置"></a>VSCode需要的配置</h1><h2 id="tasks-json"><a href="#tasks-json" class="headerlink" title="tasks.json"></a>tasks.json</h2><ul><li><strong><font size="4">在左侧运行和调试中，选项中点击运行和调试，此时会报错，并创建tasks.json文件 </font></strong><br><img src="/picture/VSCode/C_Cpp/C_Cpp%E7%9A%84%E9%85%8D%E7%BD%AE/1.png" class="lazyload placeholder" data-srcset="/picture/VSCode/C_Cpp/C_Cpp%E7%9A%84%E9%85%8D%E7%BD%AE/1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="修改前"><br><img src="/picture/VSCode/C_Cpp/C_Cpp%E7%9A%84%E9%85%8D%E7%BD%AE/2.png" class="lazyload placeholder" data-srcset="/picture/VSCode/C_Cpp/C_Cpp%E7%9A%84%E9%85%8D%E7%BD%AE/2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="修改后"><blockquote><p><strong><font size="5">注意此处的*.c文件，在json无法被认出，必须将xxx.c文件一个一个全部添加到目录中，想识别出*.c必须装插件，所以不推荐使用 </font></strong></p></blockquote></li></ul><h2 id="launch-json"><a href="#launch-json" class="headerlink" title="launch.json"></a>launch.json</h2><ul><li><strong><font size="4">在左侧运行和调试的选项中，选择创建launch.json文件</font></strong><br><img src="/picture/VSCode/C_Cpp/C_Cpp%E7%9A%84%E9%85%8D%E7%BD%AE/3.png" class="lazyload placeholder" data-srcset="/picture/VSCode/C_Cpp/C_Cpp%E7%9A%84%E9%85%8D%E7%BD%AE/3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="创建launch1"></li></ul><ul><li><strong><font size="4">点击添加配置，gdb启动</font></strong><br><img src="/picture/VSCode/C_Cpp/C_Cpp%E7%9A%84%E9%85%8D%E7%BD%AE/4.png" class="lazyload placeholder" data-srcset="/picture/VSCode/C_Cpp/C_Cpp%E7%9A%84%E9%85%8D%E7%BD%AE/4.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="配置launch2"></li></ul><ul><li><strong><font size="4">修改配置，将框选的橙色部分修改为绿色部分</font></strong><br><img src="/picture/VSCode/C_Cpp/C_Cpp%E7%9A%84%E9%85%8D%E7%BD%AE/5.png" class="lazyload placeholder" data-srcset="/picture/VSCode/C_Cpp/C_Cpp%E7%9A%84%E9%85%8D%E7%BD%AE/5.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="配置launch3"></li></ul><ul><li><strong><font size="4">修改完成的结果</font></strong><br><img src="/picture/VSCode/C_Cpp/C_Cpp%E7%9A%84%E9%85%8D%E7%BD%AE/6.png" class="lazyload placeholder" data-srcset="/picture/VSCode/C_Cpp/C_Cpp%E7%9A%84%E9%85%8D%E7%BD%AE/6.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="配置launch4"></li></ul><h2 id="c-cpp-properties-json"><a href="#c-cpp-properties-json" class="headerlink" title="c_cpp_properties.json"></a>c_cpp_properties.json</h2><ul><li><strong><font size="4">c_cpp_properties.json,用于找红色下划线.h文件，以及.h文件的各个函数</font></strong> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;configurations&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Win32&quot;</span>,</span><br><span class="line">            <span class="string">&quot;includePath&quot;</span>: [</span><br><span class="line">                </span><br><span class="line">                <span class="string">&quot;<span class="variable">$&#123;workspaceFolder&#125;</span>/**&quot;</span>,</span><br><span class="line">                <span class="string">&quot;D:/Dev-Cpp/MinGW64/include/**&quot;</span>,</span><br><span class="line">                <span class="string">&quot;D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/**&quot;</span>,</span><br><span class="line">                <span class="string">&quot;D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/backward/**&quot;</span>,</span><br><span class="line">                <span class="string">&quot;D:/Dev-Cpp/MinGW64/include&quot;</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="string">&quot;defines&quot;</span>: [</span><br><span class="line">                <span class="string">&quot;_DEBUG&quot;</span>,</span><br><span class="line">                <span class="string">&quot;UNICODE&quot;</span>,</span><br><span class="line">                <span class="string">&quot;_UNICODE&quot;</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="string">&quot;compilerPath&quot;</span>: <span class="string">&quot;D:\\Dev-Cpp\\MinGW64\\bin\\gcc.exe&quot;</span>,</span><br><span class="line">            <span class="string">&quot;cStandard&quot;</span>: <span class="string">&quot;c11&quot;</span>,</span><br><span class="line">            <span class="string">&quot;cppStandard&quot;</span>: <span class="string">&quot;c++17&quot;</span>,</span><br><span class="line">            <span class="string">&quot;intelliSenseMode&quot;</span>: <span class="string">&quot;gcc-x64&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: 4</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于windows下QT模块化安装</title>
      <link href="/2024/07/14/QT/3%E5%85%B3%E4%BA%8Ewindows%E4%B8%8BQT%E6%A8%A1%E5%9D%97%E5%8C%96%E5%AE%89%E8%A3%85/%E5%85%B3%E4%BA%8Ewindows%E4%B8%8BQT%E6%A8%A1%E5%9D%97%E5%8C%96%E5%AE%89%E8%A3%85/"/>
      <url>/2024/07/14/QT/3%E5%85%B3%E4%BA%8Ewindows%E4%B8%8BQT%E6%A8%A1%E5%9D%97%E5%8C%96%E5%AE%89%E8%A3%85/%E5%85%B3%E4%BA%8Ewindows%E4%B8%8BQT%E6%A8%A1%E5%9D%97%E5%8C%96%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><h3 id="1、QT环境，可以直接任务栏搜QT5-xx-x-MinGW-64bit-之类的"><a href="#1、QT环境，可以直接任务栏搜QT5-xx-x-MinGW-64bit-之类的" class="headerlink" title="1、QT环境，可以直接任务栏搜QT5.xx.x(MinGW-64bit)之类的"></a><strong><font size="4">1、QT环境，可以直接任务栏搜QT5.xx.x(MinGW-64bit)之类的</font></strong></h3><h3 id="2、perl环境-下载地址-右方的Releases-下载msl文件"><a href="#2、perl环境-下载地址-右方的Releases-下载msl文件" class="headerlink" title="2、perl环境,下载地址,右方的Releases,下载msl文件"></a><strong><font size="4">2、perl环境,下载地址,右方的Releases,下载msl文件</font></strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/StrawberryPerl/Perl-Dist-Strawberry</span><br></pre></td></tr></table></figure><h3 id="根据引导完成安装，在cmd输入如下命令，显示如图一"><a href="#根据引导完成安装，在cmd输入如下命令，显示如图一" class="headerlink" title="根据引导完成安装，在cmd输入如下命令，显示如图一"></a><strong><font size="4">根据引导完成安装，在cmd输入如下命令，显示如图一</font></strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl -v</span><br></pre></td></tr></table></figure><p><img src="/picture/QT/%E5%85%B3%E4%BA%8Ewindows%E4%B8%8BQT%E6%A8%A1%E5%9D%97%E5%8C%96%E5%AE%89%E8%A3%85/1.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8Ewindows%E4%B8%8BQT%E6%A8%A1%E5%9D%97%E5%8C%96%E5%AE%89%E8%A3%85/1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图一"></p><h1 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h1><h2 id="1-QT-ERROR-Unknown-module-s-in-QT-xlsx"><a href="#1-QT-ERROR-Unknown-module-s-in-QT-xlsx" class="headerlink" title="1.QT ERROR: Unknown module(s) in QT: xlsx"></a>1.QT ERROR: Unknown module(s) in QT: xlsx</h2><h3 id="这是由于没有安装xlsx模块所导致的，xlsx模块下载地址"><a href="#这是由于没有安装xlsx模块所导致的，xlsx模块下载地址" class="headerlink" title="这是由于没有安装xlsx模块所导致的，xlsx模块下载地址"></a><strong><font size="4">这是由于没有安装xlsx模块所导致的，xlsx模块下载地址</font></strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/dbzhang800/QtXlsxWriter</span><br></pre></td></tr></table></figure><h3 id="打开QT5-xx-x-MinGW-64bit-的cmd环境，cd进入xlsx模块的解压地址下的src文件，如"><a href="#打开QT5-xx-x-MinGW-64bit-的cmd环境，cd进入xlsx模块的解压地址下的src文件，如" class="headerlink" title="打开QT5.xx.x(MinGW-64bit)的cmd环境，cd进入xlsx模块的解压地址下的src文件，如"></a><strong><font size="4">打开QT5.xx.x(MinGW-64bit)的cmd环境，cd进入xlsx模块的解压地址下的src文件，如<font></strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> C:\Users\xxx\Desktop\QtXlsxWriter-master\src</span><br></pre></td></tr></table></figure><h3 id="使用这三个命令"><a href="#使用这三个命令" class="headerlink" title="使用这三个命令"></a><strong><font size="4">使用这三个命令<font></strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">qmake src.pro</span><br><span class="line">mingw32-make</span><br><span class="line">mingw32-make install</span><br></pre></td></tr></table></figure><h3 id="即可安装完成，再次打开工程，不再报错QT-ERROR-Unknown-module-s-in-QT-xlsx"><a href="#即可安装完成，再次打开工程，不再报错QT-ERROR-Unknown-module-s-in-QT-xlsx" class="headerlink" title="即可安装完成，再次打开工程，不再报错QT ERROR: Unknown module(s) in QT: xlsx"></a><strong><font size="4">即可安装完成，再次打开工程，不再报错QT ERROR: Unknown module(s) in QT: xlsx<font></strong></h3>]]></content>
      
      
      
        <tags>
            
            <tag> QT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>arm-gcc-linux编译链</title>
      <link href="/2024/05/01/Linux/Linux%E5%86%85%E6%A0%B8%E7%BC%96%E8%AF%91/%E5%AE%89%E8%A3%85arm-gcc-linux%E7%BC%96%E8%AF%91%E9%93%BE/"/>
      <url>/2024/05/01/Linux/Linux%E5%86%85%E6%A0%B8%E7%BC%96%E8%AF%91/%E5%AE%89%E8%A3%85arm-gcc-linux%E7%BC%96%E8%AF%91%E9%93%BE/</url>
      
        <content type="html"><![CDATA[<ul><li><strong><font size="4">下载一个arm-gcc-linux.tar.gz文件,并解压</font></strong></li></ul><ul><li><strong><font size="4">将bin文件添加到环境变量中</font></strong><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim ~/.bashrc</span><br></pre></td></tr></table></figure><p><strong><font size="4">添加如下代码</font></strong></p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export PATH=$PATH:/opt/arm-gcc-linux/bin</span><br><span class="line">export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/arm-gcc-linux/lib</span><br></pre></td></tr></table></figure></blockquote></blockquote></li></ul><ul><li><strong><font size="4">使能环境变量source ~&#x2F;.bashrc</font></strong></li></ul><ul><li><p><strong><font size="4">测试安装是否成功</font></strong></p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arm-linux-gcc -v</span><br></pre></td></tr></table></figure></blockquote></li><li><p><strong><font size="4">编译文件,生成可执行文件</font></strong></p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arm-linux-gcc xxx.c -o xxx</span><br></pre></td></tr></table></figure></blockquote></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用指令</title>
      <link href="/2024/05/01/Linux/Linux%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/linux%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
      <url>/2024/05/01/Linux/Linux%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/linux%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="调整屏幕分辨率"><a href="#调整屏幕分辨率" class="headerlink" title="调整屏幕分辨率"></a>调整屏幕分辨率</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo xrandr -s 1280x768</span><br></pre></td></tr></table></figure><h2 id="安装deb包命令"><a href="#安装deb包命令" class="headerlink" title="安装deb包命令"></a>安装deb包命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i xxx.deb</span><br></pre></td></tr></table></figure><p><b>解压deb包,到&#x2F;usr&#x2F;local目录下(会导致在-l无法看到，且环境需要自己配置)</b></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -x package.deb /usr/local</span><br></pre></td></tr></table></figure><h2 id="卸载deb包命令"><a href="#卸载deb包命令" class="headerlink" title="卸载deb包命令"></a>卸载deb包命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -P xxx</span><br></pre></td></tr></table></figure><h2 id="查看ubuntu的ip命令"><a href="#查看ubuntu的ip命令" class="headerlink" title="查看ubuntu的ip命令"></a>查看ubuntu的ip命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr</span><br></pre></td></tr></table></figure><p><b>ifconfig下载依赖</b></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install net-tools</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig</span><br></pre></td></tr></table></figure><h2 id="查看linux的代理命令"><a href="#查看linux的代理命令" class="headerlink" title="查看linux的代理命令"></a>查看linux的代理命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">env | grep -i proxy</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export | grep proxy</span><br></pre></td></tr></table></figure><h2 id="安装ssh依赖"><a href="#安装ssh依赖" class="headerlink" title="安装ssh依赖"></a>安装ssh依赖</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ssh openssh-server</span><br></pre></td></tr></table></figure><h2 id="解压tar-xz文件"><a href="#解压tar-xz文件" class="headerlink" title="解压tar.xz文件"></a>解压tar.xz文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tar -xvf xxx.tar.xz</span><br></pre></td></tr></table></figure><h2 id="设置开机自启动"><a href="#设置开机自启动" class="headerlink" title="设置开机自启动"></a>设置开机自启动</h2><p>在&#x2F;etc&#x2F;systemd&#x2F;system&#x2F; 目录中创建一个单元文件，并确定它有正确的文件权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">touch</span> /etc/systemd/system/name.service</span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">chmod</span> 664 /etc/systemd/system/name.service</span><br><span class="line">sudo vim name.service</span><br></pre></td></tr></table></figure><p>输入如下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=service_description</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/xxx/xxx.sh</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=default.target</span><br></pre></td></tr></table></figure><ol><li>Description表示服务名字,After表示服务何时启动</li><li>After&#x3D;network.service 表示网络连接完成后，启动我们的服务；</li><li>ExecStart表示我们的脚本xxx.sh的路径；</li><li>WantedBy默认填default.target</li></ol><h2 id="当终端内列出的东西数量过多，想要退出浏览"><a href="#当终端内列出的东西数量过多，想要退出浏览" class="headerlink" title="当终端内列出的东西数量过多，想要退出浏览"></a>当终端内列出的东西数量过多，想要退出浏览</h2><p><strong>左下方有more时，按Q退出浏览</strong></p><h2 id="环境变量添加方法"><a href="#环境变量添加方法" class="headerlink" title="环境变量添加方法"></a>环境变量添加方法</h2><ol><li>通过编辑&#x2F;etc&#x2F;profile来改PATH</li><li>改home目录下的.bashrc(即：~&#x2F;.bashrc)</li></ol><h2 id="PATH的路径"><a href="#PATH的路径" class="headerlink" title="PATH的路径"></a>PATH的路径</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/environment</span><br></pre></td></tr></table></figure><h2 id="查看ubuntu内核的指令"><a href="#查看ubuntu内核的指令" class="headerlink" title="查看ubuntu内核的指令"></a>查看ubuntu内核的指令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -a </span><br></pre></td></tr></table></figure><h2 id="查看ubuntu版本的指令"><a href="#查看ubuntu版本的指令" class="headerlink" title="查看ubuntu版本的指令"></a>查看ubuntu版本的指令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsb_release -a</span><br></pre></td></tr></table></figure><h2 id="查看磁盘系统的指令"><a href="#查看磁盘系统的指令" class="headerlink" title="查看磁盘系统的指令"></a>查看磁盘系统的指令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsblk</span><br></pre></td></tr></table></figure><p>查看磁盘文件格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsblk -f</span><br></pre></td></tr></table></figure><h2 id="查看环境变量列表的指令"><a href="#查看环境变量列表的指令" class="headerlink" title="查看环境变量列表的指令"></a>查看环境变量列表的指令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">env</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux编译内核</title>
      <link href="/2024/04/24/Linux/Linux%E5%86%85%E6%A0%B8%E7%BC%96%E8%AF%91/Linux%E7%BC%96%E8%AF%91%E5%86%85%E6%A0%B8/"/>
      <url>/2024/04/24/Linux/Linux%E5%86%85%E6%A0%B8%E7%BC%96%E8%AF%91/Linux%E7%BC%96%E8%AF%91%E5%86%85%E6%A0%B8/</url>
      
        <content type="html"><![CDATA[<h1 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h1><ul><li><strong><font size="4">当两台linux连接时，可以将一台linux电脑上的文件，映射到连接的linux电脑文件内</font></strong><blockquote><p><strong><font size="4">设备树指 暗降 外设通信等等放一起叫设备树</font></strong></p></blockquote></li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ul><li><p><strong><font size="4">安装依赖</font></strong></p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install bison</span><br><span class="line">sudo apt-get install flex</span><br><span class="line">sudo apt-get install libncurses-dev</span><br></pre></td></tr></table></figure></blockquote></li><li><p><strong><font size="4">进入linux内核配置</font></strong></p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make menuconfig</span><br></pre></td></tr></table></figure></blockquote></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NFS的作用</title>
      <link href="/2024/04/24/Linux/Linux%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/NFS%E7%9A%84%E4%BD%9C%E7%94%A8/"/>
      <url>/2024/04/24/Linux/Linux%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/NFS%E7%9A%84%E4%BD%9C%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h1><ul><li><strong><font size="4">当两台linux连接时，可以将一台linux电脑上的文件，映射到连接的linux电脑文件内</font></strong></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装辅助工具</title>
      <link href="/2024/03/29/Linux/Linux%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/%E5%AE%89%E8%A3%85%E8%BE%85%E5%8A%A9%E5%B7%A5%E5%85%B7/"/>
      <url>/2024/03/29/Linux/Linux%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/%E5%AE%89%E8%A3%85%E8%BE%85%E5%8A%A9%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<ul><li><strong><font size="4">安装bypy</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pip install bypy</span><br><span class="line"><span class="comment">#配置链接百度云</span></span><br><span class="line">bypy info </span><br><span class="line"><span class="comment">#看到文件夹内的文件</span></span><br><span class="line">bypy list </span><br></pre></td></tr></table></figure></li></ul><ul><li><strong><font size="4">桌面界面传输，配合xshell7使用</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#需要配合xshell7使用</span></span><br><span class="line">sudo apt-get install x-window-system-core  </span><br></pre></td></tr></table></figure></li></ul><ul><li><strong><font size="4">安装git</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure></li></ul><ul><li><strong><font size="4">vscode安装扩展包</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">VSCODE:</span><br><span class="line">&#123;</span><br><span class="line">    chinese，</span><br><span class="line">c/c++，Python，cmake，</span><br><span class="line">vscode-icons，</span><br><span class="line">⚪ROS，</span><br><span class="line">Msg Languages Support(能显示数据的类型)，</span><br><span class="line">C/C++ Extension Pack</span><br><span class="line">cmake tool</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux_Frp内网穿透</title>
      <link href="/2024/03/28/Linux/Linux_Frp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/Linux_Frp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
      <url>/2024/03/28/Linux/Linux_Frp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/Linux_Frp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</url>
      
        <content type="html"><![CDATA[<ul><li><strong><font size="4">Frp的下载地址</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/fatedier/frp</span><br></pre></td></tr></table></figure></li></ul><ul><li><strong><font size="4">点击右方Release对应下载，挑选合适的linux架构</font></strong></li></ul><ul><li><strong><font size="4">解压</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo xvf xxx.tar</span><br></pre></td></tr></table></figure></li></ul><ul><li><strong><font size="4">客户端编辑文件frpc.ini，服务器编辑文件frps.ini</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#frpc.ini</span></span><br><span class="line">[common]</span><br><span class="line">server_addr = 20.44.179.236 <span class="comment">#你的服务器名字</span></span><br><span class="line">server_port = 6034          <span class="comment">#连接端口</span></span><br><span class="line">token= 12345678      <span class="comment">#连接密钥</span></span><br><span class="line"></span><br><span class="line">admin_addr= 0.0.0.0       <span class="comment">#连接后可以登录检测网页</span></span><br><span class="line">admin_port= 11562</span><br><span class="line">admin_user= glasswarm</span><br><span class="line">admin_pwd= Aa4619785</span><br><span class="line"></span><br><span class="line">[ssh2]</span><br><span class="line"><span class="built_in">type</span>    = tcp</span><br><span class="line">local_ip    = 127.0.0.1</span><br><span class="line">local_port    = 8554</span><br><span class="line">custom_domains = 20.44.179.236</span><br><span class="line">remote_port    = 1006</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#frps.ini</span></span><br><span class="line">[common]</span><br><span class="line">bind_port = 6034</span><br><span class="line">token = 12345678</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><blockquote><p><strong><font size="4">启动frpc和frps命令</font></strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#frpc.ini</span></span><br><span class="line">./frpc -c frpc.ini</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#frps.ini</span></span><br><span class="line">./frps -c frps.ini</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本的使用</title>
      <link href="/2024/03/27/Linux/Linux%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/shell%E8%84%9A%E6%9C%AC%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/03/27/Linux/Linux%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/shell%E8%84%9A%E6%9C%AC%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<ul><li><strong><font size="4">创建shell脚本</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">touch</span> test.sh</span><br><span class="line">sudo vim test.sh</span><br></pre></td></tr></table></figure></li></ul><ul><li><strong><font size="4">填写内容，如下</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;you&quot;</span></span><br><span class="line"><span class="built_in">cd</span> /opt</span><br></pre></td></tr></table></figure></li></ul><ul><li><strong><font size="4">退出编辑后，授予shell文件执行权限</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chomod +x test.sh</span><br></pre></td></tr></table></figure></li></ul><ul><li><strong><font size="4">执行文件</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./test.sh</span><br></pre></td></tr></table></figure><blockquote><p><strong><font size="4">shell文件执行后，并不会将使初始系统级的指令执行，而是相当于创建了一个子系统去执行该指令</font></strong></p></blockquote></li></ul><ul><li><strong><font size="4">若是想要初始系统执行需要加上source</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ./test.sh</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于QT在linux_arm64上的安装</title>
      <link href="/2024/03/06/QT/2%E5%85%B3%E4%BA%8EQT%20for%20linux%E4%B8%8Elinux%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%AF%91%E7%9A%84%E5%AE%89%E8%A3%85/linux%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%AF%91/"/>
      <url>/2024/03/06/QT/2%E5%85%B3%E4%BA%8EQT%20for%20linux%E4%B8%8Elinux%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%AF%91%E7%9A%84%E5%AE%89%E8%A3%85/linux%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%AF%91/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> QT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于QT在linux_amd64_x86-64上的安装</title>
      <link href="/2024/03/06/QT/2%E5%85%B3%E4%BA%8EQT%20for%20linux%E4%B8%8Elinux%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%AF%91%E7%9A%84%E5%AE%89%E8%A3%85/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/"/>
      <url>/2024/03/06/QT/2%E5%85%B3%E4%BA%8EQT%20for%20linux%E4%B8%8Elinux%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%AF%91%E7%9A%84%E5%AE%89%E8%A3%85/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="QT官方-镜像的下载地址"><a href="#QT官方-镜像的下载地址" class="headerlink" title="QT官方&#x2F;镜像的下载地址"></a>QT官方&#x2F;镜像的下载地址</h1><h2 id="官网下载地址-下载速度非常慢，需要魔法"><a href="#官网下载地址-下载速度非常慢，需要魔法" class="headerlink" title="官网下载地址(下载速度非常慢，需要魔法)"></a>官网下载地址(下载速度非常慢，需要魔法)</h2><ul><li>官网:<a href="https://download.qt.io/">https://download.qt.io/</a></li></ul><h2 id="国内镜像下载地址-已经全部失效"><a href="#国内镜像下载地址-已经全部失效" class="headerlink" title="国内镜像下载地址(已经全部失效)"></a>国内镜像下载地址(已经全部失效)</h2><ul><li>中国科学技术大学：<a href="http://mirrors.ustc.edu.cn/qtproject/">http://mirrors.ustc.edu.cn/qtproject/</a></li></ul><ul><li>清华大学：<a href="https://mirrors.tuna.tsinghua.edu.cn/qt/">https://mirrors.tuna.tsinghua.edu.cn/qt/</a></li></ul><ul><li>北京理工大学：<a href="http://mirror.bit.edu.cn/qtproject/">http://mirror.bit.edu.cn/qtproject/</a></li></ul><ul><li>中国互联网络信息中心：<a href="https://mirrors.cnnic.cn/qt/">https://mirrors.cnnic.cn/qt/</a></li></ul><h2 id="页面下载-下载速度非常慢，需要魔法，且需要桌面显示，对linux云服务器不利"><a href="#页面下载-下载速度非常慢，需要魔法，且需要桌面显示，对linux云服务器不利" class="headerlink" title="页面下载(下载速度非常慢，需要魔法，且需要桌面显示，对linux云服务器不利)"></a>页面下载(下载速度非常慢，需要魔法，且需要桌面显示，对linux云服务器不利)</h2><blockquote><p><strong>选择该页面的archive&#x2F;qt&#x2F;5.12&#x2F;5.12.x&#x2F;single&#x2F;qt-everywhere-src-5.12.8.tar.xz，并下载，推荐5.12.8版本</strong></p></blockquote><h2 id="百度网盘下载地址"><a href="#百度网盘下载地址" class="headerlink" title="百度网盘下载地址"></a>百度网盘下载地址</h2><ul><li><strong>包含：QT5.12.8 linux源码，QT5.12.8 Windows开源长期维护版本，linux源码，在线下载器6.4.1,安卓SDK&#x2F;NDK和JAVA SDK</strong></li><li>链接：<a href="https://pan.baidu.com/s/1Jo4G82WE-E6BGU2oc7Ql7g?pwd=1234">https://pan.baidu.com/s/1Jo4G82WE-E6BGU2oc7Ql7g?pwd=1234</a> </li><li>提取码：1234</li></ul><h1 id="QT5-12-8-linux源码安装"><a href="#QT5-12-8-linux源码安装" class="headerlink" title="QT5.12.8_linux源码安装"></a>QT5.12.8_linux源码安装</h1><h2 id="bypy下载-可选"><a href="#bypy下载-可选" class="headerlink" title="bypy下载(可选)"></a>bypy下载(可选)</h2><ul><li><strong><font size="4">bypy可以绑定百度网盘，并可以在百度网盘上下载程序</font></strong></li></ul><blockquote><p><strong><font size="4">安装bypy</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install bypy</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong><font size="4">输入下列代码，如果不在虚拟环境下，需要使用加入python3 -m，并根据提示绑定百度网盘，等待一段时间</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bypy info # python3 -m bypy info</span><br></pre></td></tr></table></figure><p><strong><font size="4">绑定成功后会出现如&lt;图一&gt;</font></strong></p></blockquote><p><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/1.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图一"></p><blockquote><p><strong><font size="4"></font></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bypy downfile xxx <span class="comment">#下载单个文件</span></span><br><span class="line">bypy downdir  xxx <span class="comment">#下载单个文件夹</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="QT5-12-8安装"><a href="#QT5-12-8安装" class="headerlink" title="QT5.12.8安装"></a>QT5.12.8安装</h2><ul><li><strong><font size="4">依赖安装</font></strong><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libxcb-xfixes0-dev libxcb-util-dev</span><br><span class="line">sudo apt-get install libxcb-xinerama0</span><br><span class="line">sudo apt-get install build-essential libgl1-mesa-dev</span><br><span class="line">sudo apt-get install libxcb* </span><br><span class="line">sudo apt-get install libxkbcommon*</span><br></pre></td></tr></table></figure></blockquote></li></ul><ul><li><strong><font size="4">下载qt-everywhere-src-5.12.8.tar.xz，自选放置路径，如&#x2F;opt&#x2F;qt5.12.8&#x2F;内部。</font></strong></li><li><strong><font size="4">解压缩</font></strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tar -xvf qt-everywhere-src-5.12.8.tar.xz</span><br></pre></td></tr></table></figure></li></ul><ul><li><strong><font size="4">终端进入QT源码文件夹，输入下指令，跳过一些不必要的模块(根据自己的需求)</font></strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure -prefix /opt/qt5.12.8/qt5.12.8 -release -opensource -skip qtwayland -skip qtlocation -skip qtscript -skip qt3d -skip qtcanvas3d -skip datavis3d -skip qtvirtualkeyboard -platform linux-g++</span><br></pre></td></tr></table></figure><blockquote><p><strong><font size="4">如果是linux的arm环境那么添加参数-platform &lt;你的gcc编译器版本&gt;，如-platform linux-aarch64-gnu-g++(能在&#x2F;qtbase&#x2F;mkspecs&#x2F;下找到) </font></strong><br><strong><font size="4">如果是交叉编译那么添加参数-xplatform &lt;你的目标平台gcc编译器版本&gt;，-xplatform linux-aarch64-gnu-g++</font></strong><br><strong><font size="4">configure参数解析</font></strong><br><strong><font size="4">CSDN(粗略) <a href="https://blog.csdn.net/qq_37654240/article/details/109639331">https://blog.csdn.net/qq_37654240/article/details/109639331</a></font></strong><br><strong><font size="4">博客(较深) <a href="https://www.cnblogs.com/findumars/p/6254629.html">https://www.cnblogs.com/findumars/p/6254629.html</a></font></strong><br><strong><font size="4">-opensource表示使用开源版本，-confirm-license表示确认许可，-prefix表示安装路径</font></strong></p></blockquote></li></ul><ul><li><p><strong><font size="4">以下文件夹均可当参数跳过，例如-skip qt3d </font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/4.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/4.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图四"></p></li><li><p><strong><font size="4">等待一段时间，之后输入下列指令</font></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make -j4 <span class="comment">#表示使用4个线程进行编译，可以根据自己的cpu核心数进行调整</span></span><br></pre></td></tr></table></figure><blockquote><p><strong><font size="4">并等待2小时+</font></strong></p></blockquote></li></ul><ul><li><strong><font size="4">安装编译好的QT</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make install </span><br></pre></td></tr></table></figure></li></ul><blockquote><p><strong><font size="4">修正,报错&#x2F;usr&#x2F;bin&#x2F;ld.gold: error: cannot find -lclip2tri 或者 &#x2F;usr&#x2F;bin&#x2F;ld.gold: error: cannot find -lpoly2tri 或者 &#x2F;usr&#x2F;bin&#x2F;ld.gold: error: cannot find -lclipper,这主要是因为qtlocation模块依赖这个，我们-sikp qtlocation，即可跳过该报错</font></strong><br><strong><font size="4"></font></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure -prefix /opt/qt/qt5.12.8 -release -opensource -confirm-license -skip qtwayland -skip qtlocation -skip qtscript -skip qt3d -skip qtcanvas3d -skip datavis3d -skip qtvirtualkeyboard -xcb-xlib -qt-xcb</span><br></pre></td></tr></table></figure><p><strong><font size="4">出现报错 not find python，但是其实已经下载了python，如&lt;图二&gt;</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/2.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图二"><br><strong><font size="4">是因为没有建立映射关系,输入如下指令</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /usr/bin/python3 /usr/bin/python </span><br><span class="line">ls -l /usr/bin/python*</span><br></pre></td></tr></table></figure><p><strong><font size="4">发现，已经有python的映射了&lt;图三&gt;</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/3.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图三"><br><strong><font size="4">报错 C++: fatal error: Killed signal terminated program cc1plus compilation terminated.</font></strong><br><strong><font size="4">是虚拟机内存不足造成的。通过创建swap分区解决了这个问题</font></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建分区路径</span></span><br><span class="line">sudo <span class="built_in">mkdir</span> -p /var/cache/swap/</span><br><span class="line"><span class="comment"># 设置分区的大小</span></span><br><span class="line"><span class="comment"># bs=64M是块大小，count=64是块数量，所以swap空间大小是bs*count=4096MB=4GB</span></span><br><span class="line">sudo <span class="built_in">dd</span> <span class="keyword">if</span>=/dev/zero of=/var/cache/swap/swap0 bs=64M count=64</span><br><span class="line"><span class="comment"># 设置该目录权限</span></span><br><span class="line">sudo <span class="built_in">chmod</span> 0600 /var/cache/swap/swap0</span><br><span class="line"><span class="comment"># 创建SWAP文件</span></span><br><span class="line">sudo mkswap /var/cache/swap/swap0</span><br><span class="line"><span class="comment"># 激活SWAP文件</span></span><br><span class="line">sudo swapon /var/cache/swap/swap0</span><br><span class="line"><span class="comment"># 查看SWAP信息是否正确</span></span><br><span class="line">sudo swapon -s</span><br></pre></td></tr></table></figure><p><strong><font size="4">删除交换分区的命令</font></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo swapoff /var/cache/swap/swap0</span><br><span class="line">sudo <span class="built_in">rm</span> /var/cache/swap/swap0</span><br></pre></td></tr></table></figure><p><strong><font size="4">释放空间命令</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo swapoff -a</span><br><span class="line">#详细的用法：swapoff --help</span><br><span class="line">#查看当前内存使用情况：free -m</span><br></pre></td></tr></table></figure></blockquote><ul><li><strong><font size="4">安装成功，没有任何error，图五</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/5.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/5.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图五"></li></ul><ul><li><strong><font size="4">将安装成功的qt添加至环境变量</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/profile</span><br></pre></td></tr></table></figure><blockquote><p><strong><font size="4">将下列代码添加至profile文件中</font></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> QTDIR=/opt/qt-5.12.5-install(你的qt安装目录)</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$QTDIR</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> MANPATH=<span class="variable">$QTDIR</span>/man:<span class="variable">$MANPATH</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="variable">$QTDIR</span>/lib:<span class="variable">$LD_LIBRARY_PATH</span></span><br></pre></td></tr></table></figure><p><strong><font size="4">然后退出，并输入如下代码,声明环境变量</font></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure></blockquote></li></ul><ul><li><strong><font size="4">检验qt是否安装成功，输入</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qmake -v</span><br></pre></td></tr></table></figure><blockquote><p><strong><font size="4">输出图六，成功~</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/6.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E5%9C%A8linux_amd64_x86-64%E4%B8%8A%E7%9A%84%E5%AE%89%E8%A3%85/6.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图六"></p></blockquote></li></ul><h2 id="如果想看详细的输出问题"><a href="#如果想看详细的输出问题" class="headerlink" title="如果想看详细的输出问题"></a>如果想看详细的输出问题</h2><ul><li><strong><font size="4">打开环境变量配置文件</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim ~/.bashrc</span><br></pre></td></tr></table></figure><blockquote><p><strong><font size="4">末尾添加如下代码</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export QT_DEBUG_PLUGINS=1</span><br></pre></td></tr></table></figure></blockquote></li></ul><ul><li><strong><font size="4">启动环境变量</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></li></ul><h2 id="如何进行编译，生成linux可执行文件"><a href="#如何进行编译，生成linux可执行文件" class="headerlink" title="如何进行编译，生成linux可执行文件"></a>如何进行编译，生成linux可执行文件</h2><ul><li><strong><font size="4">使用qmake xxx.pro(你的.pro文件)生成Makefile文件</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qmake xxx.pro</span><br></pre></td></tr></table></figure></li></ul><ul><li><strong><font size="4">使用make生成可执行文件</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure></li></ul><ul><li><strong><font size="4">执行可执行文件</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./xxx</span><br></pre></td></tr></table></figure></li></ul><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><ul><li><strong><font size="4">如果想查看代码行数</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(Get-ChildItem -Recurse -File | Get-Content | Measure-Object -Line).Lines</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> QT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>槽函数</title>
      <link href="/2023/12/11/QT/%E6%A7%BD%E4%BF%A1%E5%8F%B7%E7%9A%84%E5%87%BD%E6%95%B0%E9%85%8D%E7%BD%AE/QT%E6%A7%BD%E5%87%BD%E6%95%B0/"/>
      <url>/2023/12/11/QT/%E6%A7%BD%E4%BF%A1%E5%8F%B7%E7%9A%84%E5%87%BD%E6%95%B0%E9%85%8D%E7%BD%AE/QT%E6%A7%BD%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="槽函数"><a href="#槽函数" class="headerlink" title="槽函数"></a>槽函数</h1><ul><li><strong><font size="4">槽函数的创建</font></strong></li></ul><p><img src="/picture/%E5%A4%87%E5%BF%98%E5%BD%95/QT/QT%E5%A4%87%E5%BF%98%E5%BD%95/%E6%A7%BD%E5%87%BD%E6%95%B0%E7%9A%84%E5%88%9B%E5%BB%BA.png" class="lazyload placeholder" data-srcset="/picture/%E5%A4%87%E5%BF%98%E5%BD%95/QT/QT%E5%A4%87%E5%BF%98%E5%BD%95/%E6%A7%BD%E5%87%BD%E6%95%B0%E7%9A%84%E5%88%9B%E5%BB%BA.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="槽函数的创建"></p><ul><li><strong><font size="4">修改UI文件名称，需要修改.ui内的对象名称</font></strong><br><img src="/picture/%E5%A4%87%E5%BF%98%E5%BD%95/QT/QT%E5%A4%87%E5%BF%98%E5%BD%95/%E4%BF%AE%E6%94%B9UI%E7%9A%84%E5%90%8D%E7%A7%B0.png" class="lazyload placeholder" data-srcset="/picture/%E5%A4%87%E5%BF%98%E5%BD%95/QT/QT%E5%A4%87%E5%BF%98%E5%BD%95/%E4%BF%AE%E6%94%B9UI%E7%9A%84%E5%90%8D%E7%A7%B0.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="修改对象名称"></li></ul><ul><li><strong><font size="4">修改UI窗体名称</font></strong><br><img src="/picture/%E5%A4%87%E5%BF%98%E5%BD%95/QT/QT%E5%A4%87%E5%BF%98%E5%BD%95/UI%E7%AA%97%E5%8F%A3%E5%90%8D%E7%A7%B0%E7%9A%84%E4%BF%AE%E6%94%B9.png" class="lazyload placeholder" data-srcset="/picture/%E5%A4%87%E5%BF%98%E5%BD%95/QT/QT%E5%A4%87%E5%BF%98%E5%BD%95/UI%E7%AA%97%E5%8F%A3%E5%90%8D%E7%A7%B0%E7%9A%84%E4%BF%AE%E6%94%B9.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="修改UI窗体名称"></li></ul><ul><li><strong><font size="4">关于unknow type name……报错，取消ClangCodeModel即可消失，但无法解决</font></strong></li></ul><ul><li><strong><font size="4">graphicsView组件在使用时,想使用QtCharts，得先提升为QtChartsview类</font></strong><div class="gallery stretch" col='2'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/备忘录/QT/QT备忘录/使用graphicsView组件为Qchart时,需要提升为QChartView1.png" class="lazyload placeholder" data-srcset="/picture/备忘录/QT/QT备忘录/使用graphicsView组件为Qchart时,需要提升为QChartView1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图" style="height:400px;"/></div><span class="image-caption">图</span></div> <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/备忘录/QT/QT备忘录/使用graphicsView组件为Qchart时,需要提升为QChartView2.png" class="lazyload placeholder" data-srcset="/picture/备忘录/QT/QT备忘录/使用graphicsView组件为Qchart时,需要提升为QChartView2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图" style="height:400px;"/></div><span class="image-caption">图</span></div>             </div></li><li><strong><font size="4">char数据储显示负数时，%d是其char存储的二进制数除去符号位的反码+1,例如字符’255’，在char中是1111 1111，其%d值为-1，抛去符号位1，反码+1，得到1000 0001 即为-1</font></strong></li></ul><ul><li><p><strong><font size="4">qt想要在其他cpp调用别的类的ui可以，先将接口传入</font></strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">TCP_Client::<span class="built_in">TCP_Client</span>(QWidget *parent) :</span><br><span class="line">            <span class="built_in">QMainWindow</span>(parent)         ,</span><br><span class="line">            <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::TCP_Client)<span class="comment">//即这个参数，Ui::TCP_Client</span></span><br><span class="line">&#123;</span><br><span class="line">    ui -&gt;<span class="built_in">setupUi</span> (<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong><font size="4">此时我们使用,这个类顶一个全局的*ui0，使ui0 &#x3D;ui,再放入.h文件进入声明</font></strong></p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.cpp</span><br><span class="line">Ui::TCP_Client *ui0;<span class="comment">//记住Ui::xxx是个类的名称</span></span><br><span class="line">TCP_Client::<span class="built_in">TCP_Client</span>(QWidget *parent) :</span><br><span class="line">            <span class="built_in">QMainWindow</span>(parent)         ,</span><br><span class="line">            <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::TCP_Client)</span><br><span class="line">&#123;</span><br><span class="line">    ui0 = ui;</span><br><span class="line">    ui0 -&gt; <span class="built_in">setupUi</span>(<span class="keyword">this</span>);<span class="comment">//记住使用ui0的文件要包含&quot;ui_xxxxx.h头文件&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.h</span><br><span class="line"><span class="keyword">extern</span> Ui::TCP_Client *ui0;</span><br></pre></td></tr></table></figure></li><li><p><strong><font size="4">在.h的class里面定义如下，带上了别的类TCP_Client *Client;</font></strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.h</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TCP_Client</span>;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Timer_set</span> : <span class="keyword">public</span> QObject</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">Timer_set</span><span class="params">(TCP_Client *Client)</span></span>;</span><br><span class="line">    ~<span class="built_in">Timer_set</span>();</span><br><span class="line"></span><br><span class="line">    TCP_Client *Client;<span class="comment">//------</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><strong><font size="4">则可以</font></strong></p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.cpp</span><br><span class="line"><span class="comment">//(TCP_Client *Client)是形参不用变,</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Client(Client),第二个Client是传入的参数(只能在类里面选)，第一个Client是该文件，传入的参数之后用什么用变量名(相当于起名字)</span></span><br><span class="line">Timer_set::<span class="built_in">Timer_set</span>(TCP_Client *Client):<span class="built_in">Client</span>(Client)</span><br><span class="line">&#123;</span><br><span class="line">    Timer_set::<span class="built_in">timer_setup</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><ul><li><p><strong><font size="4">Widget控件在使用时，会作为父类，会影响内部的子类入label，设置背景图片时需要在ui的styleSheet写入</font></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">类<span class="comment">#控件名</span></span><br><span class="line">&#123;</span><br><span class="line">border-image:url(C:/Users/glass/Desktop/sundry/picture/qq/QQ_Head/ccc.jpg);</span><br><span class="line"><span class="comment">#例如</span></span><br><span class="line">QWidget<span class="comment">#select</span></span><br><span class="line">&#123;</span><br><span class="line">border-image:url(C:/Users/glass/Desktop/sundry/picture/qq/QQ_Head/ccc.jpg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/picture/%E5%A4%87%E5%BF%98%E5%BD%95/QT/QT%E5%A4%87%E5%BF%98%E5%BD%95/QT%E7%9A%84UI%E7%88%B6%E7%B1%BB%E5%AF%B9%E5%AD%90%E7%B1%BB%E7%9A%84%E5%BD%B1%E5%93%8D.png" class="lazyload placeholder" data-srcset="/picture/%E5%A4%87%E5%BF%98%E5%BD%95/QT/QT%E5%A4%87%E5%BF%98%E5%BD%95/QT%E7%9A%84UI%E7%88%B6%E7%B1%BB%E5%AF%B9%E5%AD%90%E7%B1%BB%E7%9A%84%E5%BD%B1%E5%93%8D.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="修改UI窗体名称"></p></li><li><p><strong><font size="4">QT在调用相对路径时，要先创建.qrc文件,然后右键open with -&gt; 资源编辑器，Add Files,将所有文件加入进去</font></strong></p></li></ul><blockquote><p><strong><font size="4">相对路径是:&#x2F;(资源的文件夹)&#x2F;(资源文件),且使用前需要先加入.qrc文件内,而.&#x2F;(资源的文件夹)&#x2F;(资源文件)是生成的debug&#x2F;release文件内部</font></strong></p></blockquote><ul><li><strong><font size="4">想要去边框可以直接在ui内删除bar组件，例如menubar</font></strong></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 给自己看的备忘录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>合宙esp32-c3神奇的一些点</title>
      <link href="/2023/12/07/ESP32/%E5%90%88%E5%AE%99esp32-c3/%E5%90%88%E5%AE%99esp32-c3%E7%A5%9E%E5%A5%87%E7%9A%84%E4%B8%80%E4%BA%9B%E7%82%B9/"/>
      <url>/2023/12/07/ESP32/%E5%90%88%E5%AE%99esp32-c3/%E5%90%88%E5%AE%99esp32-c3%E7%A5%9E%E5%A5%87%E7%9A%84%E4%B8%80%E4%BA%9B%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<ul><li><strong><font size="4">经典款的c3带ch343芯片，而简约款的c3不带ch343芯片，并且UART0发送的数据不会传入上位机，但是usb转ttl功能正常</font></strong></li></ul><ul><li><strong><font size="4">cdc是USB虚拟串口，MUX是IO矩阵</font></strong></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> ESP32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>esp-idf中examples内softAP例程的main.c移植为components组件，编译提示找不到esp_wifi.h报错</title>
      <link href="/2023/12/06/ESP32/esp-idf%E4%B8%ADexamples%E5%86%85wifiAP%E7%9A%84main.c%E7%A7%BB%E6%A4%8D%E4%B8%BAcomponents%E7%BB%84%E4%BB%B6%EF%BC%8C%E7%BC%96%E8%AF%91%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0esp_wifi.h%E6%8A%A5%E9%94%99/esp-idf%E4%B8%ADexamples%E5%86%85wifiAP%E7%9A%84main.c%E7%A7%BB%E6%A4%8D%E4%B8%BAcomponents%E7%BB%84%E4%BB%B6%EF%BC%8C%E7%BC%96%E8%AF%91%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0esp_wifi.h%E6%8A%A5%E9%94%99/"/>
      <url>/2023/12/06/ESP32/esp-idf%E4%B8%ADexamples%E5%86%85wifiAP%E7%9A%84main.c%E7%A7%BB%E6%A4%8D%E4%B8%BAcomponents%E7%BB%84%E4%BB%B6%EF%BC%8C%E7%BC%96%E8%AF%91%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0esp_wifi.h%E6%8A%A5%E9%94%99/esp-idf%E4%B8%ADexamples%E5%86%85wifiAP%E7%9A%84main.c%E7%A7%BB%E6%A4%8D%E4%B8%BAcomponents%E7%BB%84%E4%BB%B6%EF%BC%8C%E7%BC%96%E8%AF%91%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0esp_wifi.h%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<h1 id="esp-idf提示找不到esp-wifi-h报错"><a href="#esp-idf提示找不到esp-wifi-h报错" class="headerlink" title="esp-idf提示找不到esp_wifi.h报错"></a>esp-idf提示找不到esp_wifi.h报错</h1><h2 id="报错如下"><a href="#报错如下" class="headerlink" title="报错如下"></a>报错如下</h2><p><img src="/picture/ESP32/esp-idf%E4%B8%ADexamples%E5%86%85wifiAP%E7%9A%84main.c%E7%A7%BB%E6%A4%8D%E4%B8%BAcomponents%E7%BB%84%E4%BB%B6%EF%BC%8C%E7%BC%96%E8%AF%91%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0esp_wifi.h%E6%8A%A5%E9%94%99/1.png" class="lazyload placeholder" data-srcset="/picture/ESP32/esp-idf%E4%B8%ADexamples%E5%86%85wifiAP%E7%9A%84main.c%E7%A7%BB%E6%A4%8D%E4%B8%BAcomponents%E7%BB%84%E4%BB%B6%EF%BC%8C%E7%BC%96%E8%AF%91%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0esp_wifi.h%E6%8A%A5%E9%94%99/1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="报错如图"></p><ul><li><p><strong><font size="4">将你的user_components组件内的CMakelists.txt由原来的</font></strong><br><img src="/picture/ESP32/esp-idf%E4%B8%ADexamples%E5%86%85wifiAP%E7%9A%84main.c%E7%A7%BB%E6%A4%8D%E4%B8%BAcomponents%E7%BB%84%E4%BB%B6%EF%BC%8C%E7%BC%96%E8%AF%91%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0esp_wifi.h%E6%8A%A5%E9%94%99/2.png" class="lazyload placeholder" data-srcset="/picture/ESP32/esp-idf%E4%B8%ADexamples%E5%86%85wifiAP%E7%9A%84main.c%E7%A7%BB%E6%A4%8D%E4%B8%BAcomponents%E7%BB%84%E4%BB%B6%EF%BC%8C%E7%BC%96%E8%AF%91%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0esp_wifi.h%E6%8A%A5%E9%94%99/2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="原来的代码"></p></li><li><p><strong><font size="4">增加(<span class='p warning'>PRIV_REQUIRES</span>&#x2F;<span class='p warning'>REQUIRES</span>) + 你的组件名，组件名在(<span class='p warning'>EDP-IDF安装路径/components/组件名</span>)</font></strong><br><img src="/picture/ESP32/esp-idf%E4%B8%ADexamples%E5%86%85wifiAP%E7%9A%84main.c%E7%A7%BB%E6%A4%8D%E4%B8%BAcomponents%E7%BB%84%E4%BB%B6%EF%BC%8C%E7%BC%96%E8%AF%91%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0esp_wifi.h%E6%8A%A5%E9%94%99/3.png" class="lazyload placeholder" data-srcset="/picture/ESP32/esp-idf%E4%B8%ADexamples%E5%86%85wifiAP%E7%9A%84main.c%E7%A7%BB%E6%A4%8D%E4%B8%BAcomponents%E7%BB%84%E4%BB%B6%EF%BC%8C%E7%BC%96%E8%AF%91%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0esp_wifi.h%E6%8A%A5%E9%94%99/3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="修改后的代码"></p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> ESP32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>esp-idf项目添加.c.h文件的三种方法</title>
      <link href="/2023/12/05/ESP32/esp-idf%E9%A1%B9%E7%9B%AE%E6%B7%BB%E5%8A%A0.c.h%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E6%B3%95/esp-idf%E9%A1%B9%E7%9B%AE%E6%B7%BB%E5%8A%A0.c.h%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
      <url>/2023/12/05/ESP32/esp-idf%E9%A1%B9%E7%9B%AE%E6%B7%BB%E5%8A%A0.c.h%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E6%B3%95/esp-idf%E9%A1%B9%E7%9B%AE%E6%B7%BB%E5%8A%A0.c.h%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="esp-idf项目添加-c-h文件的三种方法"><a href="#esp-idf项目添加-c-h文件的三种方法" class="headerlink" title="esp-idf项目添加.c.h文件的三种方法"></a>esp-idf项目添加.c.h文件的三种方法</h1><h2 id="第一种方法-直接在main文件夹里添加"><a href="#第一种方法-直接在main文件夹里添加" class="headerlink" title="第一种方法,直接在main文件夹里添加"></a>第一种方法,直接在main文件夹里添加</h2><ul><li><strong><font size="4">例如,原本目录这样</font></strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- user_project/ - CMakelists.txt</span><br><span class="line">                - sdkconfig</span><br><span class="line">                - main/ - app_main.c</span><br><span class="line">                        - Kconfig.projbuild</span><br><span class="line">                        - CMakelists.txt</span><br><span class="line">                - build/</span><br></pre></td></tr></table></figure></li><li><strong><font size="4">我们添加一个test.c.h，则</font></strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- user_project/ - CMakelists.txt</span><br><span class="line">                - sdkconfig</span><br><span class="line">                - main/ - app_main.c</span><br><span class="line">                        - Kconfig.projbuild</span><br><span class="line">                        - test.c</span><br><span class="line">                        - CMakelists.txt </span><br><span class="line">                        - test/ - test.h</span><br><span class="line">                - build/</span><br></pre></td></tr></table></figure></li></ul><ul><li><strong><font size="4">并在main&#x2F;文件夹下的<span class='p warning'>CMakelists.txt</span>由原来的</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">idf_component_register(SRCS <span class="string">&quot;tcp_server.c&quot;</span> </span><br><span class="line">                    INCLUDE_DIRS <span class="string">&quot;.&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><strong><font size="4">变为</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">idf_component_register(SRCS <span class="string">&quot;tcp_server.c&quot;</span></span><br><span class="line">                            <span class="string">&quot;test.c&quot;</span></span><br><span class="line">                    INCLUDE_DIRS <span class="string">&quot;.&quot;</span> </span><br><span class="line">                                 <span class="string">&quot;./test&quot;</span>) </span><br></pre></td></tr></table></figure></li></ul><blockquote><p><strong><font size="4">这样的添加方式不利于代码的管理，所以我们常用第二种添加方法</font></strong></p></blockquote><h2 id="第二种方法-通过创建components文件夹，添加-c-h文件"><a href="#第二种方法-通过创建components文件夹，添加-c-h文件" class="headerlink" title="第二种方法,通过创建components文件夹，添加.c.h文件"></a>第二种方法,通过创建components文件夹，添加.c.h文件</h2><ul><li><strong><font size="4">原本的目录</font></strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- user_project/ - CMakelists.txt</span><br><span class="line">                - sdkconfig</span><br><span class="line">                - main/ - app_main.c</span><br><span class="line">                        - Kconfig.projbuild</span><br><span class="line">                        - CMakelists.txt</span><br><span class="line">                - build/</span><br></pre></td></tr></table></figure></li><li><strong><font size="4">我们创建<span class='p warning'>components</span>文件夹 添加test1.c.h和test2.c.h则</font></strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- user_project/ - CMakelists.txt</span><br><span class="line">                - sdkconfig</span><br><span class="line">                - main/ - app_main.c</span><br><span class="line">                        - Kconfig.projbuild</span><br><span class="line">                - build/                 </span><br><span class="line">                - components/ - test/ - test1.c</span><br><span class="line">                                      - test2.c</span><br><span class="line">                                      - CMakelists.txt </span><br><span class="line">                                      - include/ - test1.h</span><br><span class="line">                                                 - test2.h</span><br></pre></td></tr></table></figure></li></ul><ul><li><strong><font size="4">之后我们向<span class='p warning'>test/</span>下的Cmakelists.txt写入</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">idf_component_register(SRCS <span class="string">&quot;test1.c&quot;</span></span><br><span class="line">                            <span class="string">&quot;test2.c&quot;</span></span><br><span class="line">                    INCLUDE_DIRS <span class="string">&quot;.&quot;</span></span><br><span class="line">                                 <span class="string">&quot;./include&quot;</span> )</span><br></pre></td></tr></table></figure></li></ul><blockquote><p><strong><font size="4">推荐使用这样的方式来添加.c.h文件</font></strong></p></blockquote><h2 id="第三种方法-通过添加-EXTRA-COMPONENT-DIRS-路径，添加-c-h文件"><a href="#第三种方法-通过添加-EXTRA-COMPONENT-DIRS-路径，添加-c-h文件" class="headerlink" title="第三种方法,通过添加 EXTRA_COMPONENT_DIRS 路径，添加.c.h文件"></a>第三种方法,通过添加 EXTRA_COMPONENT_DIRS 路径，添加.c.h文件</h2><ul><li><strong><font size="4">原本的目录</font></strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- user_project/ - CMakelists.txt</span><br><span class="line">                - sdkconfig</span><br><span class="line">                - main/ - app_main.c</span><br><span class="line">                        - Kconfig.projbuild</span><br><span class="line">                        - CMakelists.txt</span><br><span class="line">                - build/</span><br></pre></td></tr></table></figure></li><li><strong><font size="4">我们先创建类似components目录机构的文件夹，例如叫2023文件夹</font></strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- user_project/ - CMakelists.txt</span><br><span class="line">                - sdkconfig</span><br><span class="line">                - main/ - app_main.c</span><br><span class="line">                        - Kconfig.projbuild</span><br><span class="line">                - build/                 </span><br><span class="line">                - 2023/ - test/ - test1.c</span><br><span class="line">                                - test2.c</span><br><span class="line">                                - CMakelists.txt </span><br><span class="line">                                - include/ - test1.h</span><br><span class="line">                                - test2.h</span><br></pre></td></tr></table></figure><blockquote><p><strong><font size="5"><span class='p red'>2023/test/目录下的CMakelists.txt要和方法二中test下的CMakelists.txt内容一致</span></font></strong></p></blockquote></li></ul><ul><li><strong><font size="4">然后打开<span class='p warning'>user_project</span>文件夹下的CMakelists.txt</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The following five lines of boilerplate have to be in your project&#x27;s</span></span><br><span class="line"><span class="comment"># CMakeLists in this exact order for cmake to work correctly</span></span><br><span class="line">cmake_minimum_required(VERSION 3.16)</span><br><span class="line"></span><br><span class="line"><span class="comment"># (Not part of the boilerplate)</span></span><br><span class="line"><span class="comment"># This example uses an extra component for common functions such as Wi-Fi and Ethernet connection.</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span>(EXTRA_COMPONENT_DIRS <span class="variable">$ENV</span>&#123;IDF_PATH&#125;/examples/common_components/protocol_examples_common)</span><br><span class="line"></span><br><span class="line">include(<span class="variable">$ENV</span>&#123;IDF_PATH&#125;/tools/cmake/project.cmake)</span><br><span class="line">project(tcp_server)</span><br></pre></td></tr></table></figure></li><li><strong><font size="4">将set()部分改为</font></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The following five lines of boilerplate have to be in your project&#x27;s</span></span><br><span class="line"><span class="comment"># CMakeLists in this exact order for cmake to work correctly</span></span><br><span class="line">cmake_minimum_required(VERSION 3.16)</span><br><span class="line"></span><br><span class="line"><span class="comment"># (Not part of the boilerplate)</span></span><br><span class="line"><span class="comment"># This example uses an extra component for common functions such as Wi-Fi and Ethernet connection.</span></span><br><span class="line"><span class="built_in">set</span>(EXTRA_COMPONENT_DIRS </span><br><span class="line"><span class="variable">$ENV</span>&#123;IDF_PATH&#125;/examples/common_components/protocol_examples_common</span><br><span class="line"><span class="string">&quot;./2023&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">include(<span class="variable">$ENV</span>&#123;IDF_PATH&#125;/tools/cmake/project.cmake)</span><br><span class="line">project(tcp_server)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><blockquote><p><strong><font size="4">再次使用idf.py fullclean build即可正常编译</font></strong></p></blockquote><h2 id="完"><a href="#完" class="headerlink" title="完"></a>完</h2>]]></content>
      
      
      
        <tags>
            
            <tag> ESP32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>esp-idf常用指令</title>
      <link href="/2023/12/04/ESP32/esp-idf%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/esp-idf%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
      <url>/2023/12/04/ESP32/esp-idf%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/esp-idf%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong><font size="4">idf新建工程</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py create-project &lt;project-name&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong><font size="4">清除之前的编译结果</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py fullclean</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong><font size="4">打开串口监视器</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py -p COMx monitor</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong><font size="4">向串口烧录固件</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py -p COMx flash</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong><font size="4">项目编译</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py build</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong><font size="4">配置菜单</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py menuconfig</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong><font size="4">选择esp32芯片型号</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py set-target esp32</span><br></pre></td></tr></table></figure><p><strong><font size="4">不输入参数的话，会列出所有可用型号</font></strong></p></blockquote><blockquote><p><strong><font size="4">项目编译+烧录</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py build flash</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong><font size="4">项目编译+烧录并打开串口监视器</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py build flash monitor</span><br></pre></td></tr></table></figure></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> ESP32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于GitHub上传代码</title>
      <link href="/2023/12/04/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/"/>
      <url>/2023/12/04/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="建立GitHub的ssh密钥"><a href="#建立GitHub的ssh密钥" class="headerlink" title="建立GitHub的ssh密钥"></a>建立GitHub的ssh密钥</h1><h2 id="建立GitHub的ssh密钥-1"><a href="#建立GitHub的ssh密钥-1" class="headerlink" title="建立GitHub的ssh密钥"></a>建立GitHub的ssh密钥</h2><ul><li><strong><font size="4">找到 c盘-&gt;用户-&gt;你的账户-&gt;.shh 文件夹下的 id_rsa.pub文件</font></strong></li></ul><blockquote><p><strong><font size="4">先看一下C盘用户目录下有没有.ssh目录，有的话看下里面有没有id_rsa和id_rsa.pub这两个文件，有就跳到下一步，</font></strong></p><blockquote><p><strong><font size="4">如果没有，就打开win键，输入git，回车，通过下面命令创建</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</span><br></pre></td></tr></table></figure><p><strong><font size="4">此时可以找到c盘-&gt;用户-&gt;你的账户-&gt;.shh文件夹被生成了</font></strong></p></blockquote></blockquote><p><img src="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/1.png" class="lazyload placeholder" data-srcset="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图一"></p><ul><li><strong><font size="4">复制里面的内容</font></strong><br><img src="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/2.png" class="lazyload placeholder" data-srcset="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图二"></li></ul><ul><li><strong><font size="4">找到GitHub账户下的setting</font></strong><br><img src="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/3.png" class="lazyload placeholder" data-srcset="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图三"></li></ul><ul><li><strong><font size="4">还有该页面下的SSH and GPG keys，点击New SSH key</font></strong><br><img src="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/4.png" class="lazyload placeholder" data-srcset="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/4.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图四"></li></ul><ul><li><strong><font size="4">粘贴刚才的复制内容,并点击Add SSH key</font></strong><br><img src="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/5.png" class="lazyload placeholder" data-srcset="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/5.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图五"></li></ul><ul><li><strong><font size="4">在此处创建新的仓库</font></strong><div class="gallery stretch" col='2'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/关于GitHub上传代码/6.png" class="lazyload placeholder" data-srcset="/picture/关于GitHub上传代码/6.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图六" style="height:400px;"/></div><span class="image-caption">图六</span></div> <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/关于GitHub上传代码/7.png" class="lazyload placeholder" data-srcset="/picture/关于GitHub上传代码/7.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图七" style="height:400px;"/></div><span class="image-caption">图七</span></div>             </div></li></ul><ul><li><strong><font size="4">进入你创建好的仓库，并复制你的仓库地址</font></strong><br><img src="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/8.png" class="lazyload placeholder" data-srcset="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/8.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图八"></li></ul><ul><li><strong><font size="4">进入你的项目文件夹，右键并点击Git Bash Here</font></strong><br><img src="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/9.png" class="lazyload placeholder" data-srcset="/picture/%E5%85%B3%E4%BA%8EGitHub%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/9.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图八"></li></ul><h2 id="用到的代码"><a href="#用到的代码" class="headerlink" title="用到的代码"></a>用到的代码</h2><ul><li><strong><font size="4">在打开的黑框里输入</font></strong></li></ul><blockquote><p><strong><font size="4">初始化你的项目文件为git管理</font></strong></p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure></blockquote></blockquote><blockquote><p><strong><font size="4">如果是第一次提交的话，要先配置好你在git上的用户名和邮箱，输入命令</font></strong></p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;邮箱&quot; </span><br><span class="line">git config --global user.name &quot;名字&quot; </span><br></pre></td></tr></table></figure></blockquote></blockquote><blockquote><p><strong><font size="4">1.git add . 此操作是把项目文件夹下面的文件都添加进来</font></strong><br><strong><font size="4">2.commit命令，-m后面输入的是本次提交的说明，可以输入任意内容</font></strong></p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add . </span><br><span class="line">git commit -m &quot;first commit&quot;</span><br></pre></td></tr></table></figure></blockquote></blockquote><blockquote><p><strong><font size="4">添加你的仓库地址</font></strong></p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin 你的刚才复制的仓库地址</span><br></pre></td></tr></table></figure></blockquote></blockquote><blockquote><p><strong><font size="4">上传到GitHub仓库，如果新建的远程仓库是空的，就要加上-u这个参数代码</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><blockquote><p><strong><font size="4">仓库里有了内容之后，再从本地上传时候上传到GitHub仓库，不需要加 -u 参数，且只需要输入以下内容</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p><strong><font size="4">如果想要强制覆盖仓库里的内容的话，可以加上-f参数</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -f origin master</span><br></pre></td></tr></table></figure></blockquote></blockquote><h2 id="完"><a href="#完" class="headerlink" title="完"></a>完</h2>]]></content>
      
      
      
        <tags>
            
            <tag> 关于GitHub上传代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于QT的程序打包</title>
      <link href="/2023/12/04/QT/1%E5%85%B3%E4%BA%8EQT%E4%B8%8EQT%20for%20android%E7%9A%84%E5%AE%89%E8%A3%85/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/"/>
      <url>/2023/12/04/QT/1%E5%85%B3%E4%BA%8EQT%E4%B8%8EQT%20for%20android%E7%9A%84%E5%AE%89%E8%A3%85/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<h1 id="QT的exe程序打包方式"><a href="#QT的exe程序打包方式" class="headerlink" title="QT的exe程序打包方式"></a>QT的exe程序打包方式</h1><h2 id="直接选择QT中的debug-release打包方式"><a href="#直接选择QT中的debug-release打包方式" class="headerlink" title="直接选择QT中的debug&#x2F;release打包方式"></a>直接选择QT中的debug&#x2F;release打包方式</h2><p><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/1.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图四"></p><blockquote><p><strong><font size="4">点击绿色三角直接打包生成下文件</font></strong></p></blockquote><ul><li><strong><font size="4">打包的文件会生成在如下图该文件目录下，可以自行修改</font></strong></li></ul><div class="gallery stretch" col='2'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT的程序打包/2.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT的程序打包/2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图五" style="height:400px;"/></div><span class="image-caption">图五</span></div> <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT的程序打包/3.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT的程序打包/3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图六" style="height:400px;"/></div><span class="image-caption">图六</span></div>             </div><p><strong><font size="4">在该文件下的debug&#x2F;release文件夹（具体看打包方式）找到.exe文件，执行后且会提示缺少qt5xxxx.dll文件</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/4.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/4.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图七"></p><blockquote><p><strong><font size="4">解决方法有两种，配置环境变量和直接使用qt自带的cmd工具，填补所需的库</font></strong></p></blockquote><h2 id="一-配置环境变量来解决报错"><a href="#一-配置环境变量来解决报错" class="headerlink" title="一.配置环境变量来解决报错"></a>一.配置环境变量来解决报错</h2><ul><li><strong><font size="4">我选择的打包方式是 MinGW 64-bit 的,所以找到下图目录中的文件</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/5.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/5.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图八"><br><strong><font size="4">而报错的原因是因为缺少环境变量，这里可以在用户变量或者系统变量任选一个，点击PATH，添加环境变量</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/6.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/6.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图九"><blockquote><p><strong><font size="4">例如我的PATH中的变量名</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">E:\QT\5.12.8\5.12.8\mingw73_64\bin </span><br></pre></td></tr></table></figure><br>       <p><strong><font size="4">点击完成后就可以正常打开.exe文件了</font></strong></p></blockquote></li></ul><h2 id="二-使用QT自带的cmd工具-不需要用户下载qt库"><a href="#二-使用QT自带的cmd工具-不需要用户下载qt库" class="headerlink" title="二.使用QT自带的cmd工具(不需要用户下载qt库)"></a>二.使用QT自带的cmd工具(不需要用户下载qt库)</h2><blockquote><p><strong><font size="4">在实际使用中，用户不可能使用别人的exe程序还要下载一个QT配置环境变量，所以需要用QT自带的cmd工具将所缺失的文件一起打包</font></strong></p><blockquote><p><strong><font size="4">可以将包含.exe文件的debug&#x2F;release的文件夹复制到其他位置</font></strong></p></blockquote></blockquote><ul><li><strong><font size="4">复制exe文件所在的路径，并按下win键，打开搜索栏搜索qt，打开MinGW 64-bit的版本</font></strong></li></ul><div class="gallery stretch" col='2'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT的程序打包/7.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT的程序打包/7.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十" style="height:400px;"/></div><span class="image-caption">图十</span></div> <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT的程序打包/8.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT的程序打包/8.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十一" style="height:400px;"/></div><span class="image-caption">图十一</span></div>             </div><ul><li><strong><font size="4">输入windeployqt + exe文件所在的路径 + \应用名.exe</font></strong><blockquote><p><strong><font size="4">例如</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">windeployqt C:\Users\glass\Desktop\debug\myTcpClient.exe</span><br></pre></td></tr></table></figure></blockquote></li></ul><ul><li><strong><font size="4">运行成功</font></strong></li></ul><div class="gallery stretch" col='2'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT的程序打包/9.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT的程序打包/9.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十二" style="height:400px;"/></div><span class="image-caption">图十二</span></div> <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT的程序打包/10.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT的程序打包/10.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十三" style="height:400px;"/></div><span class="image-caption">图十三</span></div>             </div><ul><li><strong><font size="4">再次点击.exe程序正常运行</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/11.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/11.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十四"></li></ul><h1 id="关于QT-for-Android的打包方法"><a href="#关于QT-for-Android的打包方法" class="headerlink" title="关于QT for Android的打包方法"></a>关于QT for Android的打包方法</h1><h2 id="Android打包"><a href="#Android打包" class="headerlink" title="Android打包"></a>Android打包</h2><blockquote><p><strong><font size="4">需要先配置QT for Android环境，见我的下一篇博客，关于QT与QT for Android的安装(二)</font></strong></p></blockquote><ul><li><strong><font size="4">首先选择开发模式，点击绿色三角，开始编译</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/12.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/12.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十五"></li></ul><ul><li><strong><font size="4">出现No Device Found不用害怕，关闭继续点击绿色三角</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/13.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/13.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十六"></li></ul><ul><li><strong><font size="4">编译完成，在图十八看到文件输出路径</font></strong><div class="gallery stretch" col='2'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT的程序打包/14.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT的程序打包/14.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十七" style="height:400px;"/></div><span class="image-caption">图十七</span></div> <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT的程序打包/15.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT的程序打包/15.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十八" style="height:400px;"/></div><span class="image-caption">图十八</span></div>             </div></li></ul><blockquote><p><strong><font size="4">找到生成的文件，打包的apk在生成的文件夹\android-build\build\outputs\apk\debug</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/16.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85/16.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十九"></p></blockquote><h2 id="完"><a href="#完" class="headerlink" title="完"></a>完</h2>]]></content>
      
      
      
        <tags>
            
            <tag> QT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>备忘录</title>
      <link href="/2023/12/01/%E5%A4%87%E5%BF%98%E5%BD%95/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
      <url>/2023/12/01/%E5%A4%87%E5%BF%98%E5%BD%95/%E5%A4%87%E5%BF%98%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>:-1: error: msvc-based-version.conf loaded but QMAKE_MSC_VER isn’t set<br>写博客 :-1: error: msvc-version.conf loaded but QMAKE_MSC_VER isn’t set的解决方法<br><a href="https://www.cnblogs.com/ax0409/p/13684418.html">https://www.cnblogs.com/ax0409/p/13684418.html</a></p><p>多个sdk环境共存，在control panel卸载</p><p>vs2022新版本将windows10 sdk和分开了<br>以往单独sdk下载地址<a href="https://developer.microsoft.com/en-us/windows/downloads/sdk-archive/">https://developer.microsoft.com/en-us/windows/downloads/sdk-archive/</a><br>2022与2017不兼容</p>]]></content>
      
      
      
        <tags>
            
            <tag> 给自己看的备忘录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于QT与QT for Android的安装（二）</title>
      <link href="/2023/11/23/QT/1%E5%85%B3%E4%BA%8EQT%E4%B8%8EQT%20for%20android%E7%9A%84%E5%AE%89%E8%A3%85/%E5%85%B3%E4%BA%8EQT%E4%B8%8EQT%20for%20android%E7%9A%84%E5%AE%89%E8%A3%85%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2023/11/23/QT/1%E5%85%B3%E4%BA%8EQT%E4%B8%8EQT%20for%20android%E7%9A%84%E5%AE%89%E8%A3%85/%E5%85%B3%E4%BA%8EQT%E4%B8%8EQT%20for%20android%E7%9A%84%E5%AE%89%E8%A3%85%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="QT-for-Android相关资料官方-镜像的下载地址"><a href="#QT-for-Android相关资料官方-镜像的下载地址" class="headerlink" title="QT for Android相关资料官方&#x2F;镜像的下载地址"></a>QT for Android相关资料官方&#x2F;镜像的下载地址</h1><h2 id="官网下载地址"><a href="#官网下载地址" class="headerlink" title="官网下载地址"></a>官网下载地址</h2><ul><li>JAVA1.8：<a href="https://www.oracle.com/java/technologies/downloads/#java8-windows">https://www.oracle.com/java/technologies/downloads/#java8-windows</a></li></ul><ul><li>Android NDK：<a href="https://github.com/android/ndk/wiki/Unsupported-Downloads">https://github.com/android/ndk/wiki/Unsupported-Downloads</a></li></ul><ul><li>Android SDK：<a href="https://www.androiddevtools.cn/">https://www.androiddevtools.cn/</a><blockquote><p>目前官网上已经没有单独的SDK下载安装包了。谷歌官网推荐的是下载包含有Android SDK的Android Studio，由于这个Android Studio 的安装包过大，且我们只需要使用SDK工具而已，推荐去上述的第三方网站下载Android SDK。</p></blockquote></li></ul><p><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/23.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/23.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="SDK下载位置"></p><h2 id="百度网盘下载地址"><a href="#百度网盘下载地址" class="headerlink" title="百度网盘下载地址"></a>百度网盘下载地址</h2><ul><li><strong>包含：QT5.12.8开源长期维护版本,在线下载器6.4.1,安卓SDK&#x2F;NDK和JAVA SDK</strong></li><li>链接：<a href="https://pan.baidu.com/s/1Jo4G82WE-E6BGU2oc7Ql7g?pwd=1234">https://pan.baidu.com/s/1Jo4G82WE-E6BGU2oc7Ql7g?pwd=1234</a> </li><li>提取码：1234</li></ul><h1 id="安装Android-SDK"><a href="#安装Android-SDK" class="headerlink" title="安装Android SDK"></a>安装Android SDK</h1><h2 id="SDK"><a href="#SDK" class="headerlink" title="SDK"></a>SDK</h2><ul><li><strong><font size="4">新建一个Android文件夹</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/4.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/4.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图一"></li></ul><ul><li><strong><font size="4">将android-sdk_r24.4.1-windows.zip压缩包解压到android文件夹下，进入文件夹点击SDK Manager.exe文件</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/5.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/5.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图二"></li></ul><ul><li><strong><font size="4">配置安装信息后，可以按照自己的需求，点击install</font></strong><div class="gallery stretch" col='1'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT与android的安装(二)/6.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT与android的安装(二)/6.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图三" style="height:280px;"/></div><span class="image-caption">图三</span></div>             </div></li></ul><div class="gallery stretch" col='2'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT与android的安装(二)/7.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT与android的安装(二)/7.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图四" style="height:550px;"/></div><span class="image-caption">图四</span></div> <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT与android的安装(二)/8.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT与android的安装(二)/8.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图五" style="height:300px;"/></div><span class="image-caption">图五</span></div>             </div><ul><li><strong><font size="4">在界面内先点击accept（箭头1）,再点击箭头2，再次点击accept，重复直至所有协议均accept，点击install进行安装</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/9.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/9.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图六"></li></ul><ul><li><strong><font size="4">等待安装完成，退出</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/10.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/10.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图七"></li></ul><h1 id="安装JAVA-SDK"><a href="#安装JAVA-SDK" class="headerlink" title="安装JAVA SDK"></a>安装JAVA SDK</h1><h2 id="JDK"><a href="#JDK" class="headerlink" title="JDK"></a>JDK</h2><ul><li><strong><font size="4">点击JAVA SDK安装包</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/11.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/11.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图八"></li></ul><ul><li><strong><font size="4">一路next直至图九，修改安装路径（图十），点击ok安装</font></strong><div class="gallery stretch" col='2'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT与android的安装(二)/12.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT与android的安装(二)/12.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图九" style="height:400px;"/></div><span class="image-caption">图九</span></div> <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT与android的安装(二)/13.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT与android的安装(二)/13.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十" style="height:400px;"/></div><span class="image-caption">图十</span></div>             </div></li></ul><ul><li><strong><font size="4">弹出图十一，点击箭头一，更改安装路径，找到图十的安装路径，新建一个文件夹，自定义名称，在这里我命名为JDK（箭头二），点击ok，并安装</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/14.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/14.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十一"><blockquote><p>注意在该步骤下经常会出现error code 1603，可以在控制面版卸载不需要的JAVA版本，然后重启电脑就可以正常安装了</p></blockquote></li></ul><ul><li><strong><font size="4">安装完毕</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/15.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/15.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十二"></li></ul><ul><li><strong><font size="4">配置环境变量，增添JAVA_HOME、CLASSPATH变量与PATH路径</font></strong></li></ul><blockquote><p>进入环境变量配置界面</p></blockquote><div class="gallery stretch" col='1'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT与android的安装(二)/16.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT与android的安装(二)/16.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十三" style="height:400px;"/></div><span class="image-caption">图十三</span></div>             </div><div class="gallery stretch" col='2'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT与android的安装(二)/17.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT与android的安装(二)/17.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十四" style="height:400px;"/></div><span class="image-caption">图十四</span></div> <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT与android的安装(二)/18.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT与android的安装(二)/18.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十五" style="height:400px;"/></div><span class="image-caption">图十五</span></div>             </div><table><thead><tr><th align="left">变量名</th><th align="left">变量值</th></tr></thead><tbody><tr><td align="left">JAVA_HOME</td><td align="left">你的安装目录</td></tr><tr><td align="left">CLASSPATH</td><td align="left">.;%JAVA_HOME%\lib%JAVA_HOME%\lib\tools.jar</td></tr></tbody></table><div class="gallery stretch" col='2'>              <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT与android的安装(二)/19.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT与android的安装(二)/19.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十四" style="height:400px;"/></div><span class="image-caption">图十四</span></div> <div class="img-wrap"><div class="img-bg"><img class="img lazyload placeholder" src="/picture/QT/关于QT与android的安装(二)/20.png" class="lazyload placeholder" data-srcset="/picture/QT/关于QT与android的安装(二)/20.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十五" style="height:400px;"/></div><span class="image-caption">图十五</span></div>             </div><blockquote><p><strong><font size="4">PATH中的变量名</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%JAVA_HOME%\bin</span><br></pre></td></tr></table></figure></blockquote><h1 id="有关Android-NDK"><a href="#有关Android-NDK" class="headerlink" title="有关Android NDK"></a>有关Android NDK</h1><h2 id="NDK解压至Android文件夹下，待用"><a href="#NDK解压至Android文件夹下，待用" class="headerlink" title="NDK解压至Android文件夹下，待用"></a>NDK解压至Android文件夹下，待用</h2><blockquote><p><strong><font size="4">注意NDK版本不能过高，这里我选择了android-ndk-r20b版本，也试过android-ndk-r26b版本，结果qt内部提示错误</font></strong></p></blockquote><h1 id="QT内部配置"><a href="#QT内部配置" class="headerlink" title="QT内部配置"></a>QT内部配置</h1><ul><li><strong><font size="4">打开qtcrator,选择选项</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/21.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/21.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十六"></li></ul><ul><li><strong><font size="4">将三个路径一一对应，即可完成qt for Android的配置</font></strong><br><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/22.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%BA%8C)/22.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图十七"></li></ul><h2 id="QT配置篇，完"><a href="#QT配置篇，完" class="headerlink" title="QT配置篇，完"></a>QT配置篇，完</h2>]]></content>
      
      
      
        <tags>
            
            <tag> QT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于QT与QT for Android的安装（一）</title>
      <link href="/2023/11/22/QT/1%E5%85%B3%E4%BA%8EQT%E4%B8%8EQT%20for%20android%E7%9A%84%E5%AE%89%E8%A3%85/%E5%85%B3%E4%BA%8EQT%E4%B8%8EQT%20for%20android%E7%9A%84%E5%AE%89%E8%A3%85%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2023/11/22/QT/1%E5%85%B3%E4%BA%8EQT%E4%B8%8EQT%20for%20android%E7%9A%84%E5%AE%89%E8%A3%85/%E5%85%B3%E4%BA%8EQT%E4%B8%8EQT%20for%20android%E7%9A%84%E5%AE%89%E8%A3%85%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="QT官方-镜像的下载地址"><a href="#QT官方-镜像的下载地址" class="headerlink" title="QT官方&#x2F;镜像的下载地址"></a>QT官方&#x2F;镜像的下载地址</h1><h2 id="官网下载地址-下载速度非常慢，需要魔法"><a href="#官网下载地址-下载速度非常慢，需要魔法" class="headerlink" title="官网下载地址(下载速度非常慢，需要魔法)"></a>官网下载地址(下载速度非常慢，需要魔法)</h2><ul><li>官网:<a href="https://download.qt.io/">https://download.qt.io/</a></li></ul><h2 id="国内镜像下载地址"><a href="#国内镜像下载地址" class="headerlink" title="国内镜像下载地址"></a>国内镜像下载地址</h2><ul><li>中国科学技术大学：<a href="http://mirrors.ustc.edu.cn/qtproject/">http://mirrors.ustc.edu.cn/qtproject/</a></li></ul><ul><li>清华大学：<a href="https://mirrors.tuna.tsinghua.edu.cn/qt/">https://mirrors.tuna.tsinghua.edu.cn/qt/</a></li></ul><ul><li>北京理工大学：<a href="http://mirror.bit.edu.cn/qtproject/">http://mirror.bit.edu.cn/qtproject/</a></li></ul><ul><li>中国互联网络信息中心：<a href="https://mirrors.cnnic.cn/qt/">https://mirrors.cnnic.cn/qt/</a></li></ul><blockquote><p><strong>注意:QT在5.12以后的版本,都为线上安装版本，不再提供离线安装包</strong><br><strong>该页面的archive&#x2F;qt&#x2F;5.12以下的任意版本，均有离线安装包，推荐5.12.8版本，打开文件下的.exe文件即可下载离线安装包</strong></p></blockquote><blockquote><p><strong>在线下载器版本是该页面的archive&#x2F;online_installers&#x2F;下的任意文件夹，点击文件夹下的.exe文件即可下载，且在线下载器可以下载QT6</strong><br><strong>但是听说QT6开源许可和QT5相比貌似有些不同，不知道对于商用有什么影响，所以我选择使用5.12.8开源版本()</strong></p></blockquote><h2 id="百度网盘下载地址"><a href="#百度网盘下载地址" class="headerlink" title="百度网盘下载地址"></a>百度网盘下载地址</h2><ul><li><strong>包含：QT5.12.8 linux源码，QT5.12.8开源长期维护版本,在线下载器6.4.1,安卓SDK&#x2F;NDK和JAVA SDK</strong></li><li>链接：<a href="https://pan.baidu.com/s/1Jo4G82WE-E6BGU2oc7Ql7g?pwd=1234">https://pan.baidu.com/s/1Jo4G82WE-E6BGU2oc7Ql7g?pwd=1234</a> </li><li>提取码：1234</li></ul><h1 id="QT5-12-8与QT-for-android环境配置安装"><a href="#QT5-12-8与QT-for-android环境配置安装" class="headerlink" title="QT5.12.8与QT for android环境配置安装"></a>QT5.12.8与QT for android环境配置安装</h1><h2 id="QT5-12-8安装"><a href="#QT5-12-8安装" class="headerlink" title="QT5.12.8安装"></a>QT5.12.8安装</h2><ul><li><strong><font size="4">下载qt-opensource-windows-x86-5.12.8.exe，点击后一直next，直到遇见&lt;图一&gt;。</font></strong></li><li><strong><font size="4">新用户需要勾选方框内的accept，再对箭头所指的sign up进行注册，验证。</font></strong><!-- ![图一](/picture/QT/1/1.png#pic_left) --></li></ul><p><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%B8%80)/1.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%B8%80)/1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图一"></p><ul><li><strong><font size="4">选择安装路径&lt;图二&gt;</font></strong></li></ul><p><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%B8%80)/2.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%B8%80)/2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图二"></p><ul><li><strong><font size="4">一直点击下一步，遇见&lt;图三&gt;，勾选图内所需组件后，继续点击下一步</font></strong></li></ul><p><img src="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%B8%80)/3.png" class="lazyload placeholder" data-srcset="/picture/QT/%E5%85%B3%E4%BA%8EQT%E4%B8%8Eandroid%E7%9A%84%E5%AE%89%E8%A3%85(%E4%B8%80)/3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图三"></p><ul><li><strong><font size="4">等待安装完成后,取消launch</strong></font>__<br><strong><font size="4">你可以在windows开始菜单上找到4个打开快捷方式，而缺少qtcreator快捷方式</font></strong></li><li><strong><font size="4">该应用可以在<span class='p warning'>QT安装文件夹\Tools\QtCreator\bin\</span>文件夹下找到<span class='p warning'>qtcreator.exe</span></font></strong></li></ul><h2 id="环境配置篇待续"><a href="#环境配置篇待续" class="headerlink" title="环境配置篇待续"></a>环境配置篇待续</h2>]]></content>
      
      
      
        <tags>
            
            <tag> QT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo常用指令</title>
      <link href="/2023/11/22/hexo%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
      <url>/2023/11/22/hexo%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo常用指令"><a href="#hexo常用指令" class="headerlink" title="hexo常用指令"></a>hexo常用指令</h1><blockquote><p><strong>方便管理_post文件，为_post文件添加子文件</strong>__</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post -p /QT/&quot;关于QT与QT for android的安装.md&quot;</span><br></pre></td></tr></table></figure></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 给自己看的备忘录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>破站感言</title>
      <link href="/2023/09/09/hello-world/"/>
      <url>/2023/09/09/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 class="bamboo-h " id="关于破站感言52mj5eqoca0">关于破站感言</h2><br/><p><strong>总之,这是第一次建立了属于自己的博客,感觉心里倍感骄傲hh</strong><br><strong>之后我会把如何在linux和windows上使用hexo建站的感悟都分享给大家</strong><br><strong>还有是打算把自己以前学过的知识分享出来，同时这个博客也可以给自己当做一个备忘录ww</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 破站感言 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
